{"version":3,"sources":["bootstrapValidator.js"],"names":[],"mappings":"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","file":"bootstrapValidator-compiled.js","sourcesContent":["/**\r\n * BootstrapValidator (http://bootstrapvalidator.com)\r\n *\r\n * A jQuery plugin to validate form fields. Use with Bootstrap 3\r\n *\r\n * @version     v0.4.4\r\n * @author      https://twitter.com/nghuuphuoc\r\n * @copyright   (c) 2013 - 2014 Nguyen Huu Phuoc\r\n * @license     MIT\r\n */\r\n\r\n(function($) {\r\n    var BootstrapValidator = function(form, options) {\r\n        this.$form   = $(form);\r\n        this.options = $.extend({}, BootstrapValidator.DEFAULT_OPTIONS, options);\r\n\r\n        this.$invalidField = null;  // First invalid field\r\n        this.$submitButton = null;  // The submit button which is clicked to submit form\r\n\r\n        // Validating status\r\n        this.STATUS_NOT_VALIDATED = 'NOT_VALIDATED';\r\n        this.STATUS_VALIDATING    = 'VALIDATING';\r\n        this.STATUS_INVALID       = 'INVALID';\r\n        this.STATUS_VALID         = 'VALID';\r\n\r\n        // Determine the event that is fired when user change the field value\r\n        // Most modern browsers supports input event except IE 7, 8.\r\n        // IE 9 supports input event but the event is still not fired if I press the backspace key.\r\n        // Get IE version\r\n        // https://gist.github.com/padolsey/527683/#comment-7595\r\n        var ieVersion = (function() {\r\n            var v = 3, div = document.createElement('div'), a = div.all || [];\r\n            while (div.innerHTML = '<!--[if gt IE '+(++v)+']><br><![endif]-->', a[0]);\r\n            return v > 4 ? v : !v;\r\n        }());\r\n\r\n        var el = document.createElement('div');\r\n        this._changeEvent = (ieVersion === 9 || !('oninput' in el)) ? 'keyup' : 'input';\r\n\r\n        // The flag to indicate that the form is ready to submit when a remote/callback validator returns\r\n        this._submitIfValid = null;\r\n\r\n        this._init();\r\n    };\r\n\r\n    // The default options\r\n    BootstrapValidator.DEFAULT_OPTIONS = {\r\n        // The form CSS class\r\n        elementClass: 'bv-form',\r\n\r\n        // Default invalid message(默认错误信息提示)\r\n        //message: 'This value is not valid',\r\n\r\n        // Indicate fields which won't be validated\r\n        // By default, the plugin will not validate the following kind of fields:\r\n        // - disabled\r\n        // - hidden\r\n        // - invisible\r\n        //\r\n        // The setting consists of jQuery filters. Accept 3 formats:\r\n        // - A string. Use a comma to separate filter\r\n        // - An array. Each element is a filter\r\n        // - An array. Each element can be a callback function\r\n        //      function($field, validator) {\r\n        //          $field is jQuery object representing the field element\r\n        //          validator is the BootstrapValidator instance\r\n        //          return true or false;\r\n        //      }\r\n        //\r\n        // The 3 following settings are equivalent:\r\n        //\r\n        // 1) ':disabled, :hidden, :not(:visible)'\r\n        // 2) [':disabled', ':hidden', ':not(:visible)']\r\n        // 3) [':disabled', ':hidden', function($field) {\r\n        //        return !$field.is(':visible');\r\n        //    }]\r\n        excluded: [':disabled', ':hidden', ':not(:visible)'],\r\n\r\n        // Shows ok/error/loading icons based on the field validity.\r\n        // This feature requires Bootstrap v3.1.0 or later (http://getbootstrap.com/css/#forms-control-validation).\r\n        // Since Bootstrap doesn't provide any methods to know its version, this option cannot be on/off automatically.\r\n        // In other word, to use this feature you have to upgrade your Bootstrap to v3.1.0 or later.\r\n        //\r\n        // Examples:\r\n        // - Use Glyphicons icons:\r\n          feedbackIcons: {\r\n              valid: 'glyphicon glyphicon-ok',\r\n              invalid: 'glyphicon glyphicon-remove',\r\n              validating: 'glyphicon glyphicon-refresh'\r\n          },\r\n        // - Use FontAwesome icons:\r\n        //  feedbackIcons: {\r\n        //      valid: 'fa fa-check',\r\n        //      invalid: 'fa fa-times',\r\n        //      validating: 'fa fa-refresh'\r\n        //  }\r\n        //feedbackIcons: {\r\n        //    valid:      null,\r\n        //    invalid:    null,\r\n        //    validating: null\r\n        //},\r\n\r\n        // The submit buttons selector\r\n        // These buttons will be disabled to prevent the valid form from multiple submissions\r\n        submitButtons: 'button[type=\"submit\"]',\r\n\r\n        // The custom submit handler\r\n        // It will prevent the form from the default submission\r\n        //\r\n        //  submitHandler: function(validator, form) {\r\n        //      - validator is the BootstrapValidator instance\r\n        //      - form is the jQuery object present the current form\r\n        //  }\r\n        submitHandler: null,\r\n\r\n        // Live validating option\r\n        // Can be one of 3 values:\r\n        // - enabled: The plugin validates fields as soon as they are changed\r\n        // - disabled: Disable the live validating. The error messages are only shown after the form is submitted\r\n        // - submitted: The live validating is enabled after the form is submitted\r\n        live: 'enabled',\r\n\r\n        // Map the field name with validator rules\r\n        fields: null\r\n    };\r\n\r\n    BootstrapValidator.prototype = {\r\n        constructor: BootstrapValidator,\r\n\r\n        /**\r\n         * Init form\r\n         */\r\n        _init: function() {\r\n            var that    = this,\r\n                options = {\r\n                    excluded:       this.$form.attr('data-bv-excluded'),\r\n                    trigger:        this.$form.attr('data-bv-trigger'),\r\n                    message:        this.$form.attr('data-bv-message'),\r\n                    submitButtons:  this.$form.attr('data-bv-submitbuttons'),\r\n                    live:           this.$form.attr('data-bv-live'),\r\n                    fields:         {},\r\n                    feedbackIcons: {\r\n                        valid:      this.$form.attr('data-bv-feedbackicons-valid'),\r\n                        invalid:    this.$form.attr('data-bv-feedbackicons-invalid'),\r\n                        validating: this.$form.attr('data-bv-feedbackicons-validating')\r\n                    }\r\n                },\r\n                validator,\r\n                v,          // Validator name\r\n                enabled,\r\n                optionName,\r\n                optionValue,\r\n                html5AttrName,\r\n                html5Attrs;\r\n\r\n            this.$form\r\n                // Disable client side validation in HTML 5\r\n                .attr('novalidate', 'novalidate')\r\n                .addClass(this.options.elementClass)\r\n                // Disable the default submission first\r\n                .on('submit.bv', function(e) {\r\n                    e.preventDefault();\r\n                    that.validate();\r\n                })\r\n                .on('click', this.options.submitButtons, function() {\r\n                    that.$submitButton  = $(this);\r\n                    // The user just click the submit button\r\n                    that._submitIfValid = true;\r\n                })\r\n                // Find all fields which have either \"name\" or \"data-bv-field\" attribute\r\n                .find('[name], [data-bv-field]').each(function() {\r\n                var $field = $(this);\r\n                // Don't initialize hidden input\r\n                if ('hidden' == $field.attr('type')) {\r\n                    return;\r\n                }\r\n\r\n                var field  = $field.attr('name') || $field.attr('data-bv-field');\r\n                $field.attr('data-bv-field', field);\r\n\r\n                options.fields[field] = $.extend({}, {\r\n                    trigger:    $field.attr('data-bv-trigger'),\r\n                    message:    $field.attr('data-bv-message'),\r\n                    container:  $field.attr('data-bv-container'),\r\n                    selector:   $field.attr('data-bv-selector'),\r\n                    validators: {}\r\n                }, options.fields[field]);\r\n\r\n                for (v in $.fn.bootstrapValidator.validators) {\r\n                    validator  = $.fn.bootstrapValidator.validators[v];\r\n                    enabled    = $field.attr('data-bv-' + v.toLowerCase()) + '';\r\n                    html5Attrs = ('function' == typeof validator.enableByHtml5) ? validator.enableByHtml5($(this)) : null;\r\n\r\n                    if ((html5Attrs && enabled != 'false')\r\n                        || (html5Attrs !== true && ('' == enabled || 'true' == enabled)))\r\n                    {\r\n                        // Try to parse the options via attributes\r\n                        validator.html5Attributes = validator.html5Attributes || { message: 'message' };\r\n                        options.fields[field]['validators'][v] = $.extend({}, html5Attrs == true ? {} : html5Attrs, options.fields[field]['validators'][v]);\r\n\r\n                        for (html5AttrName in validator.html5Attributes) {\r\n                            optionName  = validator.html5Attributes[html5AttrName];\r\n                            optionValue = $field.attr('data-bv-' + v.toLowerCase() + '-' + html5AttrName);\r\n                            if (optionValue) {\r\n                                if ('true' == optionValue) {\r\n                                    optionValue = true;\r\n                                } else if ('false' == optionValue) {\r\n                                    optionValue = false;\r\n                                }\r\n                                options.fields[field]['validators'][v][optionName] = optionValue;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.options = $.extend(true, this.options, options);\r\n            if ('string' == typeof this.options.excluded) {\r\n                this.options.excluded = $.map(this.options.excluded.split(','), function(item) {\r\n                    // Trim the spaces\r\n                    return $.trim(item);\r\n                });\r\n            }\r\n\r\n            for (var field in this.options.fields) {\r\n                this._initField(field);\r\n            }\r\n\r\n            this.setLiveMode(this.options.live);\r\n        },\r\n\r\n        /**\r\n         * Init field\r\n         *\r\n         * @param {String} field The field name\r\n         */\r\n        _initField: function(field) {\r\n            if (this.options.fields[field] == null || this.options.fields[field].validators == null) {\r\n                return;\r\n            }\r\n\r\n            var fields = this.getFieldElements(field);\r\n\r\n            // We don't need to validate non-existing fields\r\n            if (fields == null) {\r\n                delete this.options.fields[field];\r\n                return;\r\n            }\r\n            for (var validatorName in this.options.fields[field].validators) {\r\n                if (!$.fn.bootstrapValidator.validators[validatorName]) {\r\n                    delete this.options.fields[field].validators[validatorName];\r\n                }\r\n            }\r\n\r\n            var that      = this,\r\n                type      = fields.attr('type'),\r\n                event     = ('radio' == type || 'checkbox' == type || 'file' == type || 'SELECT' == fields[0].tagName) ? 'change' : that._changeEvent,\r\n                total     = fields.length,\r\n                updateAll = (total == 1) || ('radio' == type) || ('checkbox' == type);\r\n\r\n            for (var i = 0; i < total; i++) {\r\n                var $field   = $(fields[i]),\r\n                    $parent  = $field.parents('.form-group'),\r\n                // Allow user to indicate where the error messages are shown\r\n                    $message = this.options.fields[field].container ? $parent.find(this.options.fields[field].container) : this._getMessageContainer($field);\r\n\r\n                // Set the attribute to indicate the fields which are defined by selector\r\n                if (this.options.fields[field].selector) {\r\n                    $field.attr('data-bv-field', field);\r\n                }\r\n\r\n                // Whenever the user change the field value, mark it as not validated yet\r\n                $field.on(event + '.update.bv', function() {\r\n                    // Reset the flag\r\n                    that._submitIfValid = false;\r\n                    updateAll ? that.updateStatus(field, that.STATUS_NOT_VALIDATED, null)\r\n                        : that.updateElementStatus($(this), that.STATUS_NOT_VALIDATED, null);\r\n                });\r\n\r\n                // Create help block elements for showing the error messages\r\n                $field.data('bv.messages', $message);\r\n                for (validatorName in this.options.fields[field].validators) {\r\n                    $field.data('bv.result.' + validatorName, this.STATUS_NOT_VALIDATED);\r\n\r\n                    if (!updateAll || i == total - 1) {\r\n                        $('<small/>')\r\n                            .css('display', 'none')\r\n                            .attr('data-bv-validator', validatorName)\r\n                            .attr('data-bv-validator-for', field)\r\n                            .html(this.options.fields[field].validators[validatorName].message || this.options.fields[field].message || this.options.message)\r\n                            .addClass('help-block')\r\n                            .appendTo($message);\r\n                    }\r\n                }\r\n\r\n                // Prepare the feedback icons\r\n                // Available from Bootstrap 3.1 (http://getbootstrap.com/css/#forms-control-validation)\r\n                if (this.options.feedbackIcons\r\n                    && this.options.feedbackIcons.validating && this.options.feedbackIcons.invalid && this.options.feedbackIcons.valid\r\n                    && (!updateAll || i == total - 1))\r\n                {\r\n                    $parent.addClass('has-feedback');\r\n                    //var $icon = $('<i/>').css('display', 'none').addClass('form-control-feedback').attr('data-bv-field', field).insertAfter($field);\r\n                    // The feedback icon does not render correctly if there is no label\r\n                    // https://github.com/twbs/bootstrap/issues/12873\r\n                    //if ($parent.find('label').length == 0) {\r\n                    //    $icon.css('top', 0);\r\n                    //}\r\n                    //如果是checkbox,删除图标\r\n                    if($field.attr('type') == 'checkbox'){\r\n                        $field.next('i').remove()\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.options.fields[field]['enabled'] == null) {\r\n                this.options.fields[field]['enabled'] = true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the element to place the error messages\r\n         *\r\n         * @param {jQuery} $field The field element\r\n         * @returns {jQuery}\r\n         */\r\n        _getMessageContainer: function($field) {\r\n            var $parent = $field.parent();\r\n            if ($parent.hasClass('form-group')) {\r\n                return $parent;\r\n            }\r\n\r\n            var cssClasses = $parent.attr('class');\r\n            if (!cssClasses) {\r\n                return this._getMessageContainer($parent);\r\n            }\r\n\r\n            cssClasses = cssClasses.split(' ');\r\n            var n = cssClasses.length;\r\n            for (var i = 0; i < n; i++) {\r\n                if (/^col-(xs|sm|md|lg)-\\d+$/.test(cssClasses[i]) || /^col-(xs|sm|md|lg)-offset-\\d+$/.test(cssClasses[i])) {\r\n                    return $parent;\r\n                }\r\n            }\r\n\r\n            return this._getMessageContainer($parent);\r\n        },\r\n\r\n        /**\r\n         * Called when all validations are completed\r\n         */\r\n        _submit: function() {\r\n            if (!this.isValid()) {\r\n                if ('submitted' == this.options.live) {\r\n                    this.setLiveMode('enabled');\r\n                }\r\n\r\n                // Focus to the first invalid field\r\n                if (this.$invalidField) {\r\n                    // Activate the tab containing the invalid field if exists\r\n                    var $tab = this.$invalidField.parents('.tab-pane'),\r\n                        tabId;\r\n                    if ($tab && (tabId = $tab.attr('id'))) {\r\n                        $('a[href=\"#' + tabId + '\"][data-toggle=\"tab\"]').trigger('click.bs.tab.data-api');\r\n                    }\r\n\r\n                    this.$invalidField.focus();\r\n                }\r\n\r\n                return;\r\n            }\r\n\r\n            // Call the custom submission if enabled\r\n            if (this.options.submitHandler && 'function' == typeof this.options.submitHandler) {\r\n                // If you want to submit the form inside your submit handler, please call defaultSubmit() method\r\n                this.options.submitHandler.call(this, this, this.$form, this.$submitButton);\r\n            } else {\r\n                this.disableSubmitButtons(true).defaultSubmit();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if the field is excluded.\r\n         * Returning true means that the field will not be validated\r\n         *\r\n         * @param {jQuery} $field The field element\r\n         * @return {Boolean}\r\n         */\r\n        _isExcluded: function($field) {\r\n            if (this.options.excluded) {\r\n                for (var i in this.options.excluded) {\r\n                    if (('string' == typeof this.options.excluded[i] && $field.is(this.options.excluded[i]))\r\n                        || ('function' == typeof this.options.excluded[i] && this.options.excluded[i].call(this, $field, this) == true))\r\n                    {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // --- Public methods ---\r\n\r\n        /**\r\n         * Retrieve the field elements by given name\r\n         *\r\n         * @param {String} field The field name\r\n         * @returns {null|jQuery[]}\r\n         */\r\n        getFieldElements: function(field) {\r\n            var fields = this.options.fields[field].selector ? $(this.options.fields[field].selector) : this.$form.find('[name=\"' + field + '\"]');\r\n            return (fields.length == 0) ? null : fields;\r\n        },\r\n\r\n        /**\r\n         * Set live validating mode\r\n         *\r\n         * @param {String} mode Live validating mode. Can be 'enabled', 'disabled', 'submitted'\r\n         * @returns {BootstrapValidator}\r\n         */\r\n        setLiveMode: function(mode) {\r\n            this.options.live = mode;\r\n            if ('submitted' == mode) {\r\n                return this;\r\n            }\r\n\r\n            var that = this;\r\n            for (var field in this.options.fields) {\r\n                (function(f) {\r\n                    var fields = that.getFieldElements(f);\r\n                    if (fields) {\r\n                        var type      = fields.attr('type'),\r\n                            total     = fields.length,\r\n                            updateAll = (total == 1) || ('radio' == type) || ('checkbox' == type),\r\n                            trigger   = that.options.fields[field].trigger\r\n                                || that.options.trigger\r\n                                || (('radio' == type || 'checkbox' == type || 'file' == type || 'SELECT' == fields[0].tagName) ? 'change' : that._changeEvent),\r\n                            events    = $.map(trigger.split(' '), function(item) {\r\n                                return item + '.live.bv';\r\n                            }).join(' ');\r\n\r\n                        for (var i = 0; i < total; i++) {\r\n                            ('enabled' == mode)\r\n                                ? $(fields[i]).on(events, function() {\r\n                                updateAll ? that.validateField(f) : that.validateFieldElement($(this), false);\r\n                            })\r\n                                : $(fields[i]).off(events);\r\n                        }\r\n                    }\r\n                })(field);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Disable/enable submit buttons\r\n         *\r\n         * @param {Boolean} disabled Can be true or false\r\n         * @returns {BootstrapValidator}\r\n         */\r\n        disableSubmitButtons: function(disabled) {\r\n            if (!disabled) {\r\n                this.$form.find(this.options.submitButtons).removeAttr('disabled');\r\n            } else if (this.options.live != 'disabled') {\r\n                // Don't disable if the live validating mode is disabled\r\n                this.$form.find(this.options.submitButtons).attr('disabled', 'disabled');\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Validate the form\r\n         *\r\n         * @return {BootstrapValidator}\r\n         */\r\n        validate: function() {\r\n            if (!this.options.fields) {\r\n                return this;\r\n            }\r\n            this.disableSubmitButtons(true);\r\n\r\n            for (var field in this.options.fields) {\r\n                this.validateField(field);\r\n            }\r\n\r\n            // Check if whether the submit button is clicked\r\n            if (this.$submitButton) {\r\n                this._submit();\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Validate given field\r\n         *\r\n         * @param {String} field The field name\r\n         * @returns {BootstrapValidator}\r\n         */\r\n        validateField: function(field) {\r\n            var fields = this.getFieldElements(field),\r\n                type   = fields.attr('type'),\r\n                n      = (('radio' == type) || ('checkbox' == type)) ? 1 : fields.length;\r\n\r\n            for (var i = 0; i < n; i++) {\r\n                this.validateFieldElement($(fields[i]), (n == 1));\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Validate field element\r\n         *\r\n         * @param {jQuery} $field The field element\r\n         * @param {Boolean} updateAll If true, update status of all elements which have the same name\r\n         * @returns {BootstrapValidator}\r\n         */\r\n        validateFieldElement: function($field, updateAll) {\r\n            var that       = this,\r\n                field      = $field.attr('data-bv-field'),\r\n                validators = this.options.fields[field].validators,\r\n                validatorName,\r\n                validateResult;\r\n\r\n            if (!this.options.fields[field]['enabled'] || this._isExcluded($field)) {\r\n                return this;\r\n            }\r\n\r\n            for (validatorName in validators) {\r\n                if ($field.data('bv.dfs.' + validatorName)) {\r\n                    $field.data('bv.dfs.' + validatorName).reject();\r\n                }\r\n\r\n                // Don't validate field if it is already done\r\n                var result = $field.data('bv.result.' + validatorName);\r\n                if (result == this.STATUS_VALID || result == this.STATUS_INVALID) {\r\n                    continue;\r\n                }\r\n\r\n                $field.data('bv.result.' + validatorName, this.STATUS_VALIDATING);\r\n                validateResult = $.fn.bootstrapValidator.validators[validatorName].validate(this, $field, validators[validatorName]);\r\n\r\n                if ('object' == typeof validateResult) {\r\n                    updateAll ? this.updateStatus(field, this.STATUS_VALIDATING, validatorName)\r\n                        : this.updateElementStatus($field, this.STATUS_VALIDATING, validatorName);\r\n                    $field.data('bv.dfs.' + validatorName, validateResult);\r\n\r\n                    validateResult.done(function($f, v, isValid) {\r\n                        // v is validator name\r\n                        $f.removeData('bv.dfs.' + v);\r\n                        updateAll ? that.updateStatus($f.attr('data-bv-field'), isValid ? that.STATUS_VALID : that.STATUS_INVALID, v)\r\n                            : that.updateElementStatus($f, isValid ? that.STATUS_VALID : that.STATUS_INVALID, v);\r\n\r\n                        if (isValid && that._submitIfValid == true) {\r\n                            // If a remote validator returns true and the form is ready to submit, then do it\r\n                            that._submit();\r\n                        }\r\n                    });\r\n                } else if ('boolean' == typeof validateResult) {\r\n                    updateAll ? this.updateStatus(field, validateResult ? this.STATUS_VALID : this.STATUS_INVALID, validatorName)\r\n                        : this.updateElementStatus($field, validateResult ? this.STATUS_VALID : this.STATUS_INVALID, validatorName);\r\n                }\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Update all validating results of elements which have the same field name\r\n         *\r\n         * @param {String} field The field name\r\n         * @param {String} status The status. Can be 'NOT_VALIDATED', 'VALIDATING', 'INVALID' or 'VALID'\r\n         * @param {String} [validatorName] The validator name. If null, the method updates validity result for all validators\r\n         * @return {BootstrapValidator}\r\n         */\r\n        updateStatus: function(field, status, validatorName) {\r\n            var fields = this.getFieldElements(field),\r\n                type   = fields.attr('type'),\r\n                n      = (('radio' == type) || ('checkbox' == type)) ? 1 : fields.length;\r\n\r\n            for (var i = 0; i < n; i++) {\r\n                this.updateElementStatus($(fields[i]), status, validatorName);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Update validating result of given element\r\n         *\r\n         * @param {jQuery} $field The field element\r\n         * @param {String} status The status. Can be 'NOT_VALIDATED', 'VALIDATING', 'INVALID' or 'VALID'\r\n         * @param {String} [validatorName] The validator name. If null, the method updates validity result for all validators\r\n         * @return {BootstrapValidator}\r\n         */\r\n        updateElementStatus: function($field, status, validatorName) {\r\n            var that     = this,\r\n                field    = $field.attr('data-bv-field'),\r\n                $parent  = $field.parents('.form-group'),\r\n                $message = $field.data('bv.messages'),\r\n                $errors  = $message.find('.help-block[data-bv-validator]');\r\n\r\n                //$icon    = $parent.find('.form-control-feedback[data-bv-field=\"' + field + '\"]');\r\n\r\n\r\n            // Update status\r\n            if (validatorName) {\r\n                $field.data('bv.result.' + validatorName, status);\r\n            } else {\r\n                for (var v in this.options.fields[field].validators) {\r\n                    $field.data('bv.result.' + v, status);\r\n                }\r\n            }\r\n\r\n            // Determine the tab containing the element\r\n            var $tabPane = $field.parents('.tab-pane'),\r\n                tabId,\r\n                $tab;\r\n            if ($tabPane && (tabId = $tabPane.attr('id'))) {\r\n                $tab = $('a[href=\"#' + tabId + '\"][data-toggle=\"tab\"]').parent();\r\n            }\r\n\r\n            // Show/hide error elements and feedback icons\r\n            switch (status) {\r\n                case this.STATUS_VALIDATING:\r\n                    this.disableSubmitButtons(true);\r\n                    $parent.removeClass('has-success').removeClass('has-error');\r\n                    // TODO: Show validating message\r\n                    validatorName ? $errors.filter('.help-block[data-bv-validator=\"' + validatorName + '\"]').hide() : $errors.hide();\r\n                    /*if ($icon) {\r\n                        $icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.invalid).addClass(this.options.feedbackIcons.validating).show();\r\n                    }*/\r\n                    if ($tab) {\r\n                        $tab.removeClass('bv-tab-success').removeClass('bv-tab-error');\r\n                    }\r\n                    break;\r\n\r\n                case this.STATUS_INVALID:\r\n                    this.disableSubmitButtons(true);\r\n                    $parent.removeClass('has-success').addClass('has-error');\r\n                    validatorName ? $errors.filter('[data-bv-validator=\"' + validatorName + '\"]').show() : $errors.eq(0).show();\r\n                   /* if ($icon) {\r\n                        $icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.validating).addClass(this.options.feedbackIcons.invalid).show();\r\n                    }*/\r\n                    if ($tab) {\r\n                        $tab.removeClass('bv-tab-success').addClass('bv-tab-error');\r\n                    }\r\n                    break;\r\n\r\n                case this.STATUS_VALID:\r\n                    validatorName ? $errors.filter('[data-bv-validator=\"' + validatorName + '\"]').hide() : $errors.hide();\r\n\r\n                    // If the field is valid (passes all validators)\r\n                    var validField = ($errors.filter(function() {\r\n                        var display = $(this).css('display'), v = $(this).attr('data-bv-validator');\r\n                        return ('block' == display) || ($field.data('bv.result.' + v) != that.STATUS_VALID);\r\n                    }).length == 0);\r\n                    this.disableSubmitButtons(validField ? false : true);\r\n               /*     if ($icon) {\r\n                        $icon\r\n                            .removeClass(this.options.feedbackIcons.invalid).removeClass(this.options.feedbackIcons.validating).removeClass(this.options.feedbackIcons.valid)\r\n                            .addClass(validField ? this.options.feedbackIcons.valid : this.options.feedbackIcons.invalid)\r\n                            .show();\r\n                    }*/\r\n\r\n                    // Check if all elements in given container are valid\r\n                    var isValidContainer = function($container) {\r\n                        return $container\r\n                                .find('.help-block[data-bv-validator]')\r\n                                .filter(function() {\r\n                                    var display = $(this).css('display'), v = $(this).attr('data-bv-validator');\r\n                                    return ('block' == display) || ($field.data('bv.result.' + v) && $field.data('bv.result.' + v) != that.STATUS_VALID);\r\n                                })\r\n                                .length == 0;\r\n                    };\r\n                    $parent.removeClass('has-error has-success').addClass(isValidContainer($parent) ? 'has-success' : 'has-error');\r\n                    if ($tab) {\r\n                        $tab.removeClass('bv-tab-success').removeClass('bv-tab-error').addClass(isValidContainer($tabPane) ? 'bv-tab-success' : 'bv-tab-error');\r\n                    }\r\n                    break;\r\n\r\n                case this.STATUS_NOT_VALIDATED:\r\n                default:\r\n                    this.disableSubmitButtons(false);\r\n                    $parent.removeClass('has-success').removeClass('has-error');\r\n                    validatorName ? $errors.filter('.help-block[data-bv-validator=\"' + validatorName + '\"]').hide() : $errors.hide();\r\n                    /*if ($icon) {\r\n                        $icon.removeClass(this.options.feedbackIcons.valid).removeClass(this.options.feedbackIcons.invalid).removeClass(this.options.feedbackIcons.validating).hide();\r\n                    }*/\r\n                    if ($tab) {\r\n                        $tab.removeClass('bv-tab-success').removeClass('bv-tab-error');\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Check the form validity\r\n         *\r\n         * @returns {Boolean}\r\n         */\r\n        isValid: function() {\r\n            var fields, field, $field,\r\n                type, status, validatorName,\r\n                n, i;\r\n            for (field in this.options.fields) {\r\n                if (this.options.fields[field] == null || !this.options.fields[field]['enabled']) {\r\n                    continue;\r\n                }\r\n\r\n                fields = this.getFieldElements(field);\r\n                type   = fields.attr('type');\r\n                n      = (('radio' == type) || ('checkbox' == type)) ? 1 : fields.length;\r\n\r\n                for (i = 0; i < n; i++) {\r\n                    $field = $(fields[i]);\r\n                    if (this._isExcluded($field)) {\r\n                        continue;\r\n                    }\r\n\r\n                    for (validatorName in this.options.fields[field].validators) {\r\n                        status = $field.data('bv.result.' + validatorName);\r\n                        if (status == this.STATUS_NOT_VALIDATED || status == this.STATUS_VALIDATING) {\r\n                            return false;\r\n                        }\r\n\r\n                        if (status == this.STATUS_INVALID) {\r\n                            this.$invalidField = $field;\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Submit the form using default submission.\r\n         * It also does not perform any validations when submitting the form\r\n         *\r\n         * It might be used when you want to submit the form right inside the submitHandler()\r\n         */\r\n        defaultSubmit: function() {\r\n            this.$form.off('submit.bv').submit();\r\n        },\r\n\r\n        // Useful APIs which aren't used internally\r\n\r\n        /**\r\n         * Reset the form\r\n         *\r\n         * @param {Boolean} resetFormData Reset current form data\r\n         * @return {BootstrapValidator}\r\n         */\r\n        resetForm: function(resetFormData) {\r\n            var field, fields, total, type, validator;\r\n            for (field in this.options.fields) {\r\n                fields = this.getFieldElements(field);\r\n                total  = fields.length;\r\n\r\n                for (var i = 0; i < total; i++) {\r\n                    for (validator in this.options.fields[field].validators) {\r\n                        $(fields[i]).removeData('bv.dfs.' + validator);\r\n                    }\r\n                }\r\n\r\n                // Mark field as not validated yet\r\n                this.updateStatus(field, this.STATUS_NOT_VALIDATED, null);\r\n\r\n                if (resetFormData) {\r\n                    type = fields.attr('type');\r\n                    ('radio' == type || 'checkbox' == type) ? fields.removeAttr('checked').removeAttr('selected') : fields.val('');\r\n                }\r\n            }\r\n\r\n            this.$invalidField = null;\r\n            this.$submitButton = null;\r\n\r\n            // Enable submit buttons\r\n            this.disableSubmitButtons(false);\r\n\r\n            return this;\r\n        },\r\n\r\n        /**\r\n         * Enable/Disable all validators to given field\r\n         *\r\n         * @param {String} field The field name\r\n         * @param {Boolean} enabled Enable/Disable field validators\r\n         * @return {BootstrapValidator}\r\n         */\r\n        enableFieldValidators: function(field, enabled) {\r\n            this.options.fields[field]['enabled'] = enabled;\r\n            this.updateStatus(field, this.STATUS_NOT_VALIDATED, null);\r\n\r\n            return this;\r\n        }\r\n    };\r\n\r\n    // Plugin definition\r\n    $.fn.bootstrapValidator = function(option, params) {\r\n        return this.each(function() {\r\n            var $this   = $(this),\r\n                data    = $this.data('bootstrapValidator'),\r\n                options = 'object' == typeof option && option;\r\n            if (!data) {\r\n                data = new BootstrapValidator(this, options);\r\n                $this.data('bootstrapValidator', data);\r\n            }\r\n\r\n            // Allow to call plugin method\r\n            if ('string' == typeof option) {\r\n                data[option](params);\r\n            }\r\n        });\r\n    };\r\n\r\n    // Available validators\r\n    $.fn.bootstrapValidator.validators = {};\r\n\r\n    $.fn.bootstrapValidator.Constructor = BootstrapValidator;\r\n\r\n    // Helper methods, which can be used in validator class\r\n    $.fn.bootstrapValidator.helpers = {\r\n        /**\r\n         * Implement Luhn validation algorithm ((http://en.wikipedia.org/wiki/Luhn))\r\n         * Credit to https://gist.github.com/ShirtlessKirk/2134376\r\n         *\r\n         * @param {String} value\r\n         * @returns {Boolean}\r\n         */\r\n        luhn: function(value) {\r\n            var length  = value.length,\r\n                mul     = 0,\r\n                prodArr = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9], [0, 2, 4, 6, 8, 1, 3, 5, 7, 9]],\r\n                sum     = 0;\r\n\r\n            while (length--) {\r\n                sum += prodArr[mul][parseInt(value.charAt(length), 10)];\r\n                mul ^= 1;\r\n            }\r\n\r\n            return (sum % 10 === 0 && sum > 0);\r\n        },\r\n\r\n        /**\r\n         * Implement modulus 11, 10 (ISO 7064) algorithm\r\n         *\r\n         * @param {String} value\r\n         * @returns {Boolean}\r\n         */\r\n        mod_11_10: function(value) {\r\n            var check  = 5,\r\n                length = value.length;\r\n            for (var i = 0; i < length; i++) {\r\n                check = (((check || 10) * 2) % 11 + parseInt(value.charAt(i), 10)) % 10;\r\n            }\r\n            return (check == 1);\r\n        },\r\n\r\n        /**\r\n         * Implements Mod 37, 36 (ISO 7064) algorithm\r\n         * Usages:\r\n         * mod_37_36('A12425GABC1234002M')\r\n         * mod_37_36('002006673085', '0123456789')\r\n         *\r\n         * @param {String} value\r\n         * @param {String} alphabet\r\n         * @returns {Boolean}\r\n         */\r\n        mod_37_36: function(value, alphabet) {\r\n            alphabet = alphabet || '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n            var modulus = alphabet.length,\r\n                length  = value.length,\r\n                check   = Math.floor(modulus / 2);\r\n            for (var i = 0; i < length; i++) {\r\n                check = (((check || modulus) * 2) % (modulus + 1) + alphabet.indexOf(value.charAt(i))) % modulus;\r\n            }\r\n            return (check == 1);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.base64 = {\r\n        /**\r\n         * Return true if the input value is a base 64 encoded string.\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$/.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.between = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            min: 'min',\r\n            max: 'max',\r\n            inclusive: 'inclusive'\r\n        },\r\n\r\n        enableByHtml5: function($field) {\r\n            if ('range' == $field.attr('type')) {\r\n                return {\r\n                    min: $field.attr('min'),\r\n                    max: $field.attr('max')\r\n                };\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is between (strictly or not) two given numbers\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - min\r\n         * - max\r\n         * - inclusive [optional]: Can be true or false. Default is true\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            value = parseFloat(value);\r\n            return (options.inclusive === true)\r\n                ? (value > options.min && value < options.max)\r\n                : (value >= options.min && value <= options.max);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.callback = {\r\n        /**\r\n         * Return result from the callback method\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - callback: The callback method that passes 2 parameters:\r\n         *      callback: function(fieldValue, validator) {\r\n         *          // fieldValue is the value of field\r\n         *          // validator is instance of BootstrapValidator\r\n         *      }\r\n         * - message: The invalid message\r\n         * @returns {Boolean|Deferred}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (options.callback && 'function' == typeof options.callback) {\r\n                var dfd = new $.Deferred();\r\n                dfd.resolve($field, 'callback', options.callback.call(this, value, validator));\r\n                return dfd;\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.choice = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            min: 'min',\r\n            max: 'max'\r\n        },\r\n\r\n        /**\r\n         * Check if the number of checked boxes are less or more than a given number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consists of following keys:\r\n         * - min\r\n         * - max\r\n         * At least one of two keys is required\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var numChoices = $field.is('select')\r\n                ? validator.getFieldElements($field.attr('data-bv-field')).find('option').filter(':selected').length\r\n                : validator.getFieldElements($field.attr('data-bv-field')).filter(':checked').length;\r\n            if ((options.min && numChoices < options.min) || (options.max && numChoices > options.max)) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.creditCard = {\r\n        /**\r\n         * Return true if the input value is valid credit card number\r\n         * Based on https://gist.github.com/DiegoSalazar/4075533\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following key:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            // Accept only digits, dashes or spaces\r\n            if (/[^0-9-\\s]+/.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.replace(/\\D/g, '');\r\n\r\n            if (!$.fn.bootstrapValidator.helpers.luhn(value)) {\r\n                return false;\r\n            }\r\n\r\n            // Validate the card number based on prefix (IIN ranges) and length\r\n            var cards = {\r\n                AMERICAN_EXPRESS: {\r\n                    length: [15],\r\n                    prefix: ['34', '37']\r\n                },\r\n                DINERS_CLUB: {\r\n                    length: [14],\r\n                    prefix: ['300', '301', '302', '303', '304', '305', '36']\r\n                },\r\n                DINERS_CLUB_US: {\r\n                    length: [16],\r\n                    prefix: ['54', '55']\r\n                },\r\n                DISCOVER: {\r\n                    length: [16],\r\n                    prefix: ['6011', '622126', '622127', '622128', '622129', '62213',\r\n                        '62214', '62215', '62216', '62217', '62218', '62219',\r\n                        '6222', '6223', '6224', '6225', '6226', '6227', '6228',\r\n                        '62290', '62291', '622920', '622921', '622922', '622923',\r\n                        '622924', '622925', '644', '645', '646', '647', '648',\r\n                        '649', '65']\r\n                },\r\n                JCB: {\r\n                    length: [16],\r\n                    prefix: ['3528', '3529', '353', '354', '355', '356', '357', '358']\r\n                },\r\n                LASER: {\r\n                    length: [16, 17, 18, 19],\r\n                    prefix: ['6304', '6706', '6771', '6709']\r\n                },\r\n                MAESTRO: {\r\n                    length: [12, 13, 14, 15, 16, 17, 18, 19],\r\n                    prefix: ['5018', '5020', '5038', '6304', '6759', '6761', '6762', '6763', '6764', '6765', '6766']\r\n                },\r\n                MASTERCARD: {\r\n                    length: [16],\r\n                    prefix: ['51', '52', '53', '54', '55']\r\n                },\r\n                SOLO: {\r\n                    length: [16, 18, 19],\r\n                    prefix: ['6334', '6767']\r\n                },\r\n                UNIONPAY: {\r\n                    length: [16, 17, 18, 19],\r\n                    prefix: ['622126', '622127', '622128', '622129', '62213', '62214',\r\n                        '62215', '62216', '62217', '62218', '62219', '6222', '6223',\r\n                        '6224', '6225', '6226', '6227', '6228', '62290', '62291',\r\n                        '622920', '622921', '622922', '622923', '622924', '622925']\r\n                },\r\n                VISA: {\r\n                    length: [16],\r\n                    prefix: ['4']\r\n                }\r\n            };\r\n\r\n            var type, i;\r\n            for (type in cards) {\r\n                for (i in cards[type]['prefix']) {\r\n                    if (value.substr(0, cards[type]['prefix'][i].length) == cards[type]['prefix'][i]    // Check the prefix\r\n                        && cards[type]['length'].indexOf(value.length) != -1)                           // and length\r\n                    {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.cvv = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            ccfield: 'creditCardField'\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is a valid CVV number.\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - creditCardField: The credit card number field. It can be null\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            if (!/^[0-9]{3,4}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            if (!options.creditCardField) {\r\n                return true;\r\n            }\r\n\r\n            // Get the credit card number\r\n            var creditCard = validator.getFieldElements(options.creditCardField).val();\r\n            if (creditCard == '') {\r\n                return true;\r\n            }\r\n\r\n            // Supported credit card types\r\n            var cards = {\r\n                AMERICAN_EXPRESS: {\r\n                    length: [15],\r\n                    prefix: ['34', '37']\r\n                },\r\n                DINERS_CLUB: {\r\n                    length: [14],\r\n                    prefix: ['300', '301', '302', '303', '304', '305', '36']\r\n                },\r\n                DINERS_CLUB_US: {\r\n                    length: [16],\r\n                    prefix: ['54', '55']\r\n                },\r\n                DISCOVER: {\r\n                    length: [16],\r\n                    prefix: ['6011', '622126', '622127', '622128', '622129', '62213',\r\n                        '62214', '62215', '62216', '62217', '62218', '62219',\r\n                        '6222', '6223', '6224', '6225', '6226', '6227', '6228',\r\n                        '62290', '62291', '622920', '622921', '622922', '622923',\r\n                        '622924', '622925', '644', '645', '646', '647', '648',\r\n                        '649', '65']\r\n                },\r\n                JCB: {\r\n                    length: [16],\r\n                    prefix: ['3528', '3529', '353', '354', '355', '356', '357', '358']\r\n                },\r\n                LASER: {\r\n                    length: [16, 17, 18, 19],\r\n                    prefix: ['6304', '6706', '6771', '6709']\r\n                },\r\n                MAESTRO: {\r\n                    length: [12, 13, 14, 15, 16, 17, 18, 19],\r\n                    prefix: ['5018', '5020', '5038', '6304', '6759', '6761', '6762', '6763', '6764', '6765', '6766']\r\n                },\r\n                MASTERCARD: {\r\n                    length: [16],\r\n                    prefix: ['51', '52', '53', '54', '55']\r\n                },\r\n                SOLO: {\r\n                    length: [16, 18, 19],\r\n                    prefix: ['6334', '6767']\r\n                },\r\n                UNIONPAY: {\r\n                    length: [16, 17, 18, 19],\r\n                    prefix: ['622126', '622127', '622128', '622129', '62213', '62214',\r\n                        '62215', '62216', '62217', '62218', '62219', '6222', '6223',\r\n                        '6224', '6225', '6226', '6227', '6228', '62290', '62291',\r\n                        '622920', '622921', '622922', '622923', '622924', '622925']\r\n                },\r\n                VISA: {\r\n                    length: [16],\r\n                    prefix: ['4']\r\n                }\r\n            };\r\n            var type, i, creditCardType = null;\r\n            for (type in cards) {\r\n                for (i in cards[type]['prefix']) {\r\n                    if (creditCard.substr(0, cards[type]['prefix'][i].length) == cards[type]['prefix'][i]   // Check the prefix\r\n                        && cards[type]['length'].indexOf(creditCard.length) != -1)                          // and length\r\n                    {\r\n                        creditCardType = type;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return (creditCardType == null)\r\n                ? false\r\n                : (('AMERICAN_EXPRESS' == creditCardType) ? (value.length == 4) : (value.length == 3));\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.date = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            format: 'format'\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is valid date\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * - format: The date format. Default is MM/DD/YYYY\r\n         * The format can be:\r\n         *\r\n         * i) date: Consist of DD, MM, YYYY parts which are separated by /\r\n         * ii) date and time:\r\n         * The time can consist of h, m, s parts which are separated by :\r\n         * ii) date, time and A (indicating AM or PM)\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            options.format = options.format || 'MM/DD/YYYY';\r\n\r\n            var formats    = options.format.split(' '),\r\n                dateFormat = formats[0],\r\n                timeFormat = (formats.length > 1) ? formats[1] : null,\r\n                amOrPm     = (formats.length > 2) ? formats[2] : null,\r\n                sections   = value.split(' '),\r\n                date       = sections[0],\r\n                time       = (sections.length > 1) ? sections[1] : null;\r\n\r\n            if (formats.length != sections.length) {\r\n                return false;\r\n            }\r\n\r\n            // Determine the separator\r\n            var separator = (date.indexOf('/') != -1) ? '/' : ((date.indexOf('-') != -1) ? '-' : null);\r\n            if (separator == null) {\r\n                return false;\r\n            }\r\n\r\n            // Determine the date\r\n            date       = date.split(separator);\r\n            dateFormat = dateFormat.split(separator);\r\n            var year  = date[dateFormat.indexOf('YYYY')],\r\n                month = date[dateFormat.indexOf('MM')],\r\n                day   = date[dateFormat.indexOf('DD')];\r\n\r\n            // Determine the time\r\n            var minutes = null, hours = null, seconds = null;\r\n            if (timeFormat) {\r\n                timeFormat = timeFormat.split(':'),\r\n                    time       = time.split(':');\r\n\r\n                if (timeFormat.length != time.length) {\r\n                    return false;\r\n                }\r\n\r\n                hours   = time.length > 0 ? time[0] : null;\r\n                minutes = time.length > 1 ? time[1] : null;\r\n                seconds = time.length > 2 ? time[2] : null;\r\n\r\n                // Validate seconds\r\n                if (seconds) {\r\n                    seconds = parseInt(seconds, 10);\r\n                    if (seconds < 0 || seconds > 60) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // Validate hours\r\n                if (hours) {\r\n                    hours = parseInt(hours, 10);\r\n                    if (hours < 0 || hours >= 24 || (amOrPm && hours > 12)) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                // Validate minutes\r\n                if (minutes) {\r\n                    minutes = parseInt(minutes, 10);\r\n                    if (minutes < 0 || minutes > 59) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Validate day, month, and year\r\n            day   = parseInt(day, 10);\r\n            month = parseInt(month, 10);\r\n            year  = parseInt(year, 10);\r\n\r\n            if (year < 1000 || year > 9999 || month == 0 || month > 12) {\r\n                return false;\r\n            }\r\n\r\n            var numDays = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n            // Update the number of days in Feb of leap year\r\n            if (year % 400 == 0 || (year % 100 != 0 && year % 4 == 0)) {\r\n                numDays[1] = 29;\r\n            }\r\n\r\n            // Check the day\r\n            return (day > 0 && day <= numDays[month - 1]);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.different = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            field: 'field'\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is different with given field's value\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consists of the following key:\r\n         * - field: The name of field that will be used to compare with current one\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            var compareWith = validator.getFieldElements(options.field);\r\n            if (compareWith == null) {\r\n                return true;\r\n            }\r\n\r\n            if (value != compareWith.val()) {\r\n                validator.updateStatus(options.field, validator.STATUS_VALID, 'different');\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.digits = {\r\n        /**\r\n         * Return true if the input value contains digits only\r\n         *\r\n         * @param {BootstrapValidator} validator Validate plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            return /^\\d+$/.test(value);\r\n        }\r\n    }\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.ean = {\r\n        /**\r\n         * Validate EAN (International Article Number)\r\n         * Examples:\r\n         * - Valid: 73513537, 9780471117094, 4006381333931\r\n         * - Invalid: 73513536\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/European_Article_Number\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            if (!/^(\\d{8}|\\d{12}|\\d{13})$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            var length = value.length,\r\n                sum    = 0,\r\n                weight = (length == 8) ? [3, 1] : [1, 3];\r\n            for (var i = 0; i < length - 1; i++) {\r\n                sum += parseInt(value.charAt(i)) * weight[i % 2];\r\n            }\r\n            sum = 10 - sum % 10;\r\n            return (sum == value.charAt(length - 1));\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.emailAddress = {\r\n        enableByHtml5: function($field) {\r\n            return ('email' == $field.attr('type'));\r\n        },\r\n\r\n        /**\r\n         * Return true if and only if the input value is a valid email address\r\n         *\r\n         * @param {BootstrapValidator} validator Validate plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            // Email address regular expression\r\n            // http://stackoverflow.com/questions/46155/validate-email-address-in-javascript\r\n            var emailRegExp = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n            return emailRegExp.test(value);\r\n        }\r\n    }\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.file = {\r\n        html5Attributes: {\r\n            extension: 'extension',\r\n            maxsize: 'maxSize',\r\n            message: 'message',\r\n            type: 'type'\r\n        },\r\n\r\n        /**\r\n         * Validate upload file. Use HTML 5 API if the browser supports\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - extension: The allowed extensions, separated by a comma\r\n         * - maxSize: The maximum size in bytes\r\n         * - message: The invalid message\r\n         * - type: The allowed MIME type, separated by a comma\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            var ext,\r\n                extensions = options.extension ? options.extension.split(',') : null,\r\n                types      = options.type      ? options.type.split(',')      : null,\r\n                html5      = (window.File && window.FileList && window.FileReader);\r\n\r\n            if (html5) {\r\n                // Get FileList instance\r\n                var files = $field.get(0).files,\r\n                    total = files.length;\r\n                for (var i = 0; i < total; i++) {\r\n                    // Check file size\r\n                    if (options.maxSize && files[i].size > parseInt(options.maxSize)) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Check file extension\r\n                    ext = files[i].name.substr(files[i].name.lastIndexOf('.') + 1);\r\n                    if (extensions && extensions.indexOf(ext) == -1) {\r\n                        return false;\r\n                    }\r\n\r\n                    // Check file type\r\n                    if (types && types.indexOf(files[i].type) == -1) {\r\n                        return false;\r\n                    }\r\n                }\r\n            } else {\r\n                // Check file extension\r\n                ext = value.substr(value.lastIndexOf('.') + 1);\r\n                if (extensions && extensions.indexOf(ext) == -1) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.greaterThan = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            value: 'value',\r\n            inclusive: 'inclusive'\r\n        },\r\n\r\n        enableByHtml5: function($field) {\r\n            var min = $field.attr('min');\r\n            if (min) {\r\n                return {\r\n                    value: min\r\n                };\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is greater than or equals to given number\r\n         *\r\n         * @param {BootstrapValidator} validator Validate plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - value: The number used to compare to\r\n         * - inclusive [optional]: Can be true or false. Default is true\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n            value = parseFloat(value);\r\n            return (options.inclusive === true) ? (value > options.value) : (value >= options.value);\r\n        }\r\n    }\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.grid = {\r\n        /**\r\n         * Validate GRId (Global Release Identifier)\r\n         * Examples:\r\n         * - Valid: A12425GABC1234002M, A1-2425G-ABC1234002-M, A1 2425G ABC1234002 M, Grid:A1-2425G-ABC1234002-M\r\n         * - Invalid: A1-2425G-ABC1234002-Q\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/Global_Release_Identifier\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            value = value.toUpperCase();\r\n            if (!/^[GRID:]*([0-9A-Z]{2})[-\\s]*([0-9A-Z]{5})[-\\s]*([0-9A-Z]{10})[-\\s]*([0-9A-Z]{1})$/g.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.replace(/\\s/g, '').replace(/-/g, '');\r\n            if ('GRID:' == value.substr(0, 5)) {\r\n                value = value.substr(5);\r\n            }\r\n            return $.fn.bootstrapValidator.helpers.mod_37_36(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.hex = {\r\n        /**\r\n         * Return true if and only if the input value is a valid hexadecimal number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            return /^[0-9a-fA-F]+$/.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.hexColor = {\r\n        enableByHtml5: function($field) {\r\n            return ('color' == $field.attr('type'));\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is a valid hex color\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n            return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.iban = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            country: 'country'\r\n        },\r\n\r\n        /**\r\n         * Validate an International Bank Account Number (IBAN)\r\n         * To test it, take the sample IBAN from\r\n         * http://www.nordea.com/Our+services/International+products+and+services/Cash+Management/IBAN+countries/908462.html\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * - country: The ISO 3166-1 country code\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            // See\r\n            // http://www.swift.com/dsp/resources/documents/IBAN_Registry.pdf\r\n            // http://en.wikipedia.org/wiki/International_Bank_Account_Number#IBAN_formats_by_country\r\n            var ibanRegex = {\r\n                'AD': 'AD[0-9]{2}[0-9]{4}[0-9]{4}[A-Z0-9]{12}',                     // Andorra\r\n                'AE': 'AE[0-9]{2}[0-9]{3}[0-9]{16}',                                // United Arab Emirates\r\n                'AL': 'AL[0-9]{2}[0-9]{8}[A-Z0-9]{16}',                             // Albania\r\n                'AO': 'AO[0-9]{2}[0-9]{21}',                                        // Angola\r\n                'AT': 'AT[0-9]{2}[0-9]{5}[0-9]{11}',                                // Austria\r\n                'AZ': 'AZ[0-9]{2}[A-Z]{4}[A-Z0-9]{20}',                             // Azerbaijan\r\n                'BA': 'BA[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{8}[0-9]{2}',                 // Bosnia and Herzegovina\r\n                'BE': 'BE[0-9]{2}[0-9]{3}[0-9]{7}[0-9]{2}',                         // Belgium\r\n                'BF': 'BF[0-9]{2}[0-9]{23}',                                        // Burkina Faso\r\n                'BG': 'BG[0-9]{2}[A-Z]{4}[0-9]{4}[0-9]{2}[A-Z0-9]{8}',              // Bulgaria\r\n                'BH': 'BH[0-9]{2}[A-Z]{4}[A-Z0-9]{14}',                             // Bahrain\r\n                'BI': 'BI[0-9]{2}[0-9]{12}',                                        // Burundi\r\n                'BJ': 'BJ[0-9]{2}[A-Z]{1}[0-9]{23}',                                // Benin\r\n                'BR': 'BR[0-9]{2}[0-9]{8}[0-9]{5}[0-9]{10}[A-Z][A-Z0-9]',           // Brazil\r\n                'CH': 'CH[0-9]{2}[0-9]{5}[A-Z0-9]{12}',                             // Switzerland\r\n                'CI': 'CI[0-9]{2}[A-Z]{1}[0-9]{23}',                                // Ivory Coast\r\n                'CM': 'CM[0-9]{2}[0-9]{23}',                                        // Cameroon\r\n                'CR': 'CR[0-9]{2}[0-9]{3}[0-9]{14}',                                // Costa Rica\r\n                'CV': 'CV[0-9]{2}[0-9]{21}',                                        // Cape Verde\r\n                'CY': 'CY[0-9]{2}[0-9]{3}[0-9]{5}[A-Z0-9]{16}',                     // Cyprus\r\n                'CZ': 'CZ[0-9]{2}[0-9]{20}',                                        // Czech Republic\r\n                'DE': 'DE[0-9]{2}[0-9]{8}[0-9]{10}',                                // Germany\r\n                'DK': 'DK[0-9]{2}[0-9]{14}',                                        // Denmark\r\n                'DO': 'DO[0-9]{2}[A-Z0-9]{4}[0-9]{20}',                             // Dominican Republic\r\n                'DZ': 'DZ[0-9]{2}[0-9]{20}',                                        // Algeria\r\n                'EE': 'EE[0-9]{2}[0-9]{2}[0-9]{2}[0-9]{11}[0-9]{1}',                // Estonia\r\n                'ES': 'ES[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{1}[0-9]{1}[0-9]{10}',        // Spain\r\n                'FI': 'FI[0-9]{2}[0-9]{6}[0-9]{7}[0-9]{1}',                         // Finland\r\n                'FO': 'FO[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}',                         // Faroe Islands\r\n                'FR': 'FR[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}',             // France\r\n                'GB': 'GB[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}',                         // United Kingdom\r\n                'GE': 'GE[0-9]{2}[A-Z]{2}[0-9]{16}',                                // Georgia\r\n                'GI': 'GI[0-9]{2}[A-Z]{4}[A-Z0-9]{15}',                             // Gibraltar\r\n                'GL': 'GL[0-9]{2}[0-9]{4}[0-9]{9}[0-9]{1}',                         // Greenland[\r\n                'GR': 'GR[0-9]{2}[0-9]{3}[0-9]{4}[A-Z0-9]{16}',                     // Greece\r\n                'GT': 'GT[0-9]{2}[A-Z0-9]{4}[A-Z0-9]{20}',                          // Guatemala\r\n                'HR': 'HR[0-9]{2}[0-9]{7}[0-9]{10}',                                // Croatia\r\n                'HU': 'HU[0-9]{2}[0-9]{3}[0-9]{4}[0-9]{1}[0-9]{15}[0-9]{1}',        // Hungary\r\n                'IE': 'IE[0-9]{2}[A-Z]{4}[0-9]{6}[0-9]{8}',                         // Ireland\r\n                'IL': 'IL[0-9]{2}[0-9]{3}[0-9]{3}[0-9]{13}',                        // Israel\r\n                'IR': 'IR[0-9]{2}[0-9]{22}',                                        // Iran\r\n                'IS': 'IS[0-9]{2}[0-9]{4}[0-9]{2}[0-9]{6}[0-9]{10}',                // Iceland\r\n                'IT': 'IT[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}',             // Italy\r\n                'JO': 'JO[0-9]{2}[A-Z]{4}[0-9]{4}[0]{8}[A-Z0-9]{10}',               // Jordan\r\n                'KW': 'KW[0-9]{2}[A-Z]{4}[0-9]{22}',                                // Kuwait\r\n                'KZ': 'KZ[0-9]{2}[0-9]{3}[A-Z0-9]{13}',                             // Kazakhstan\r\n                'LB': 'LB[0-9]{2}[0-9]{4}[A-Z0-9]{20}',                             // Lebanon\r\n                'LI': 'LI[0-9]{2}[0-9]{5}[A-Z0-9]{12}',                             // Liechtenstein\r\n                'LT': 'LT[0-9]{2}[0-9]{5}[0-9]{11}',                                // Lithuania\r\n                'LU': 'LU[0-9]{2}[0-9]{3}[A-Z0-9]{13}',                             // Luxembourg\r\n                'LV': 'LV[0-9]{2}[A-Z]{4}[A-Z0-9]{13}',                             // Latvia\r\n                'MC': 'MC[0-9]{2}[0-9]{5}[0-9]{5}[A-Z0-9]{11}[0-9]{2}',             // Monaco\r\n                'MD': 'MD[0-9]{2}[A-Z0-9]{20}',                                     // Moldova\r\n                'ME': 'ME[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                        // Montenegro\r\n                'MG': 'MG[0-9]{2}[0-9]{23}',                                        // Madagascar\r\n                'MK': 'MK[0-9]{2}[0-9]{3}[A-Z0-9]{10}[0-9]{2}',                     // Macedonia\r\n                'ML': 'ML[0-9]{2}[A-Z]{1}[0-9]{23}',                                // Mali\r\n                'MR': 'MR13[0-9]{5}[0-9]{5}[0-9]{11}[0-9]{2}',                      // Mauritania\r\n                'MT': 'MT[0-9]{2}[A-Z]{4}[0-9]{5}[A-Z0-9]{18}',                     // Malta\r\n                'MU': 'MU[0-9]{2}[A-Z]{4}[0-9]{2}[0-9]{2}[0-9]{12}[0-9]{3}[A-Z]{3}',// Mauritius\r\n                'MZ': 'MZ[0-9]{2}[0-9]{21}',                                        // Mozambique\r\n                'NL': 'NL[0-9]{2}[A-Z]{4}[0-9]{10}',                                // Netherlands\r\n                'NO': 'NO[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{1}',                         // Norway\r\n                'PK': 'PK[0-9]{2}[A-Z]{4}[A-Z0-9]{16}',                             // Pakistan\r\n                'PL': 'PL[0-9]{2}[0-9]{8}[0-9]{16}',                                // Poland\r\n                'PS': 'PS[0-9]{2}[A-Z]{4}[A-Z0-9]{21}',                             // Palestinian\r\n                'PT': 'PT[0-9]{2}[0-9]{4}[0-9]{4}[0-9]{11}[0-9]{2}',                // Portugal\r\n                'QA': 'QA[0-9]{2}[A-Z]{4}[A-Z0-9]{21}',                             // Qatar\r\n                'RO': 'RO[0-9]{2}[A-Z]{4}[A-Z0-9]{16}',                             // Romania\r\n                'RS': 'RS[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                        // Serbia\r\n                'SA': 'SA[0-9]{2}[0-9]{2}[A-Z0-9]{18}',                             // Saudi Arabia\r\n                'SE': 'SE[0-9]{2}[0-9]{3}[0-9]{16}[0-9]{1}',                        // Sweden\r\n                'SI': 'SI[0-9]{2}[0-9]{5}[0-9]{8}[0-9]{2}',                         // Slovenia\r\n                'SK': 'SK[0-9]{2}[0-9]{4}[0-9]{6}[0-9]{10}',                        // Slovakia\r\n                'SM': 'SM[0-9]{2}[A-Z]{1}[0-9]{5}[0-9]{5}[A-Z0-9]{12}',             // San Marino\r\n                'SN': 'SN[0-9]{2}[A-Z]{1}[0-9]{23}',                                // Senegal\r\n                'TN': 'TN59[0-9]{2}[0-9]{3}[0-9]{13}[0-9]{2}',                      // Tunisia\r\n                'TR': 'TR[0-9]{2}[0-9]{5}[A-Z0-9]{1}[A-Z0-9]{16}',                  // Turkey\r\n                'VG': 'VG[0-9]{2}[A-Z]{4}[0-9]{16}'                                 // Virgin Islands, British\r\n            };\r\n            value = value.replace(/[^a-zA-Z0-9]/g, '').toUpperCase();\r\n            var country = options.country || value.substr(0, 2);\r\n            if (!ibanRegex[country]) {\r\n                return false;\r\n            }\r\n            if (!(new RegExp('^' + ibanRegex[country] + '$')).test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(4) + value.substr(0, 4);\r\n            value = value.split('').map(function(n) {\r\n                var code = n.charCodeAt(0);\r\n                return (code >= 'A'.charCodeAt(0) && code <= 'Z'.charCodeAt(0))\r\n                    // Replace A, B, C, ..., Z with 10, 11, ..., 35\r\n                    ? (code - 'A'.charCodeAt(0) + 10)\r\n                    : n;\r\n            }).join('');\r\n\r\n            var temp   = parseInt(value.substr(0, 1), 10),\r\n                length = value.length;\r\n            for (var i = 1; i < length; ++i) {\r\n                temp = (temp * 10 + parseInt(value.substr(i, 1), 10)) % 97;\r\n            }\r\n            return (temp == 1);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.identical = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            field: 'field'\r\n        },\r\n\r\n        /**\r\n         * Check if input value equals to value of particular one\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consists of the following key:\r\n         * - field: The name of field that will be used to compare with current one\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            var compareWith = validator.getFieldElements(options.field);\r\n            if (compareWith == null) {\r\n                return true;\r\n            }\r\n\r\n            if (value == compareWith.val()) {\r\n                validator.updateStatus(options.field, validator.STATUS_VALID, 'identical');\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.imei = {\r\n        /**\r\n         * Validate IMEI (International Mobile Station Equipment Identity)\r\n         * Examples:\r\n         * - Valid: 35-209900-176148-1, 35-209900-176148-23, 3568680000414120, 490154203237518\r\n         * - Invalid: 490154203237517\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/International_Mobile_Station_Equipment_Identity\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            switch (true) {\r\n                case /^\\d{15}$/.test(value):\r\n                case /^\\d{2}-\\d{6}-\\d{6}-\\d{1}$/.test(value):\r\n                case /^\\d{2}\\s\\d{6}\\s\\d{6}\\s\\d{1}$/.test(value):\r\n                    value = value.replace(/[^0-9]/g, '');\r\n                    return $.fn.bootstrapValidator.helpers.luhn(value);\r\n                    break;\r\n\r\n                case /^\\d{14}$/.test(value):\r\n                case /^\\d{16}$/.test(value):\r\n                case /^\\d{2}-\\d{6}-\\d{6}(|-\\d{2})$/.test(value):\r\n                case /^\\d{2}\\s\\d{6}\\s\\d{6}(|\\s\\d{2})$/.test(value):\r\n                    return true;\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.integer = {\r\n        enableByHtml5: function($field) {\r\n            return ('number' == $field.attr('type'));\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is an integer\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following key:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n            return /^(?:-?(?:0|[1-9][0-9]*))$/.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.ip = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            ipv4: 'ipv4',\r\n            ipv6: 'ipv6'\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is a IP address.\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - ipv4: Enable IPv4 validator, default to true\r\n         * - ipv6: Enable IPv6 validator, default to true\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n            options = $.extend({}, { ipv4: true, ipv6: true }, options);\r\n\r\n            if (options.ipv4) {\r\n                return /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(value);\r\n            } else if (options.ipv6) {\r\n                return /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/.test(str);\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.isbn = {\r\n        /**\r\n         * Return true if the input value is a valid ISBN 10 or ISBN 13 number\r\n         * Examples:\r\n         * - Valid:\r\n         * ISBN 10: 99921-58-10-7, 9971-5-0210-0, 960-425-059-0, 80-902734-1-6, 85-359-0277-5, 1-84356-028-3, 0-684-84328-5, 0-8044-2957-X, 0-85131-041-9, 0-943396-04-2, 0-9752298-0-X\r\n         * ISBN 13: 978-0-306-40615-7\r\n         * - Invalid:\r\n         * ISBN 10: 99921-58-10-6\r\n         * ISBN 13: 978-0-306-40615-6\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/International_Standard_Book_Number\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            // http://en.wikipedia.org/wiki/International_Standard_Book_Number#Overview\r\n            // Groups are separated by a hyphen or a space\r\n            var type;\r\n            switch (true) {\r\n                case /^\\d{9}[\\dX]$/.test(value):\r\n                case (value.length == 13 && /^(\\d+)-(\\d+)-(\\d+)-([\\dX])$/.test(value)):\r\n                case (value.length == 13 && /^(\\d+)\\s(\\d+)\\s(\\d+)\\s([\\dX])$/.test(value)):\r\n                    type = 'ISBN10';\r\n                    break;\r\n                case /^(978|979)\\d{9}[\\dX]$/.test(value):\r\n                case (value.length == 17 && /^(978|979)-(\\d+)-(\\d+)-(\\d+)-([\\dX])$/.test(value)):\r\n                case (value.length == 17 && /^(978|979)\\s(\\d+)\\s(\\d+)\\s(\\d+)\\s([\\dX])$/.test(value)):\r\n                    type = 'ISBN13';\r\n                    break;\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            // Replace all special characters except digits and X\r\n            value = value.replace(/[^0-9X]/gi, '');\r\n            var chars  = value.split(''),\r\n                length = chars.length,\r\n                sum    = 0,\r\n                checksum;\r\n\r\n            switch (type) {\r\n                case 'ISBN10':\r\n                    sum = 0;\r\n                    for (var i = 0; i < length - 1; i++) {\r\n                        sum += ((10 - i) * parseInt(chars[i]));\r\n                    }\r\n                    checksum = 11 - (sum % 11);\r\n                    if (checksum == 11) {\r\n                        checksum = 0;\r\n                    } else if (checksum == 10) {\r\n                        checksum = 'X';\r\n                    }\r\n                    return (checksum + '' == chars[length - 1]);\r\n\r\n                case 'ISBN13':\r\n                    sum = 0;\r\n                    for (var i = 0; i < length - 1; i++) {\r\n                        sum += ((i % 2 == 0) ? parseInt(chars[i]) : (parseInt(chars[i]) * 3));\r\n                    }\r\n                    checksum = 10 - (sum % 10);\r\n                    if (checksum == 10) {\r\n                        checksum = '0';\r\n                    }\r\n                    return (checksum + '' == chars[length - 1]);\r\n\r\n                default:\r\n                    return false;\r\n            }\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.ismn = {\r\n        /**\r\n         * Validate ISMN (International Standard Music Number)\r\n         * Examples:\r\n         * - Valid: M230671187, 979-0-0601-1561-5, 979 0 3452 4680 5, 9790060115615\r\n         * - Invalid: 9790060115614\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/International_Standard_Music_Number\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            // Groups are separated by a hyphen or a space\r\n            var type;\r\n            switch (true) {\r\n                case /^M\\d{9}$/.test(value):\r\n                case /^M-\\d{4}-\\d{4}-\\d{1}$/.test(value):\r\n                case /^M\\s\\d{4}\\s\\d{4}\\s\\d{1}$/.test(value):\r\n                    type = 'ISMN10';\r\n                    break;\r\n                case /^9790\\d{9}$/.test(value):\r\n                case /^979-0-\\d{4}-\\d{4}-\\d{1}$/.test(value):\r\n                case /^979\\s0\\s\\d{4}\\s\\d{4}\\s\\d{1}$/.test(value):\r\n                    type = 'ISMN13';\r\n                    break;\r\n                default:\r\n                    return false;\r\n            }\r\n\r\n            if ('ISMN10' == type) {\r\n                value = '9790' + value.substr(1);\r\n            }\r\n\r\n            // Replace all special characters except digits\r\n            value = value.replace(/[^0-9]/gi, '');\r\n            var length = value.length,\r\n                sum    = 0,\r\n                weight = [1, 3];\r\n            for (var i = 0; i < length - 1; i++) {\r\n                sum += parseInt(value.charAt(i)) * weight[i % 2];\r\n            }\r\n            sum = 10 - sum % 10;\r\n            return (sum == value.charAt(length - 1));\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.issn = {\r\n        /**\r\n         * Validate ISSN (International Standard Serial Number)\r\n         * Examples:\r\n         * - Valid: 0378-5955, 0024-9319, 0032-1478\r\n         * - Invalid: 0032-147X\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/International_Standard_Serial_Number\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            // Groups are separated by a hyphen or a space\r\n            if (!/^\\d{4}\\-\\d{3}[\\dX]$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            // Replace all special characters except digits and X\r\n            value = value.replace(/[^0-9X]/gi, '');\r\n            var chars  = value.split(''),\r\n                length = chars.length,\r\n                sum    = 0;\r\n\r\n            if (chars[7] == 'X') {\r\n                chars[7] = 10;\r\n            }\r\n            for (var i = 0; i < length; i++) {\r\n                sum += ((8 - i) * parseInt(chars[i]));\r\n            }\r\n            return (sum % 11 == 0);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.lessThan = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            value: 'value',\r\n            inclusive: 'inclusive'\r\n        },\r\n\r\n        enableByHtml5: function($field) {\r\n            var max = $field.attr('max');\r\n            if (max) {\r\n                return {\r\n                    value: max\r\n                };\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is less than or equal to given number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - value: The number used to compare to\r\n         * - inclusive [optional]: Can be true or false. Default is true\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n            value = parseFloat(value);\r\n            return (options.inclusive === false) ? (value <= options.value) : (value < options.value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.mac = {\r\n        /**\r\n         * Return true if the input value is a MAC address.\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            return /^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$/.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.notEmpty = {\r\n        enableByHtml5: function($field) {\r\n            var required = $field.attr('required') + '';\r\n            return ('required' == required || 'true' == required);\r\n        },\r\n\r\n        /**\r\n         * Check if input value is empty or not\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var type = $field.attr('type');\r\n            if ('radio' == type || 'checkbox' == type) {\r\n                return validator\r\n                        .getFieldElements($field.attr('data-bv-field'))\r\n                        .filter(':checked')\r\n                        .length > 0;\r\n            }\r\n\r\n            return $.trim($field.val()) != '';\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.numeric = {\r\n        /**\r\n         * Validate decimal number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            return !isNaN(parseFloat(value)) && isFinite(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.phone = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            country: 'country'\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value contains a valid US phone number only\r\n         *\r\n         * @param {BootstrapValidator} validator Validate plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * - country: The ISO 3166 country code\r\n         * Currently it only supports United State (US) country\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            var country = (options.country || 'US').toUpperCase();\r\n            switch (country) {\r\n                case 'US':\r\n                default:\r\n                    // Make sure US phone numbers have 10 digits\r\n                    // May start with 1, +1, or 1-; should discard\r\n                    // Area code may be delimited with (), & sections may be delimited with . or -\r\n                    // Test: http://regexr.com/38mqi\r\n                    value = value.replace(/\\D/g, '');\r\n                    return (/^(?:(1\\-?)|(\\+1 ?))?\\(?(\\d{3})[\\)\\-\\.]?(\\d{3})[\\-\\.]?(\\d{4})$/).test(value) && (value.length == 10);\r\n            }\r\n        }\r\n    }\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.regexp = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            regexp: 'regexp'\r\n        },\r\n\r\n        enableByHtml5: function($field) {\r\n            var pattern = $field.attr('pattern');\r\n            if (pattern) {\r\n                return {\r\n                    regexp: pattern\r\n                };\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Check if the element value matches given regular expression\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consists of the following key:\r\n         * - regexp: The regular expression you need to check\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            var regexp = ('string' == typeof options.regexp) ? new RegExp(options.regexp) : options.regexp;\r\n            return regexp.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function ($) {\r\n    $.fn.bootstrapValidator.validators.remote = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            url: 'url',\r\n            name: 'name'\r\n        },\r\n\r\n        /**\r\n         * Request a remote server to check the input value\r\n         *\r\n         * @param {BootstrapValidator} validator Plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - url\r\n         * - data [optional]: By default, it will take the value\r\n         *  {\r\n         *      <fieldName>: <fieldValue>\r\n         *  }\r\n         * - name [optional]: Override the field name for the request.\r\n         * - message: The invalid message\r\n         * @returns {Boolean|Deferred}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            var name = $field.attr('data-bv-field'), data = options.data;\r\n            if (data == null) {\r\n                data = {};\r\n            }\r\n            // Support dynamic data\r\n            if ('function' == typeof data) {\r\n                data = data.call(this, validator);\r\n            }\r\n            data[options.name || name] = value;\r\n\r\n            var dfd = new $.Deferred();\r\n            var xhr = $.ajax({\r\n                type: 'POST',\r\n                url: options.url,\r\n                dataType: 'json',\r\n                data: data\r\n            });\r\n            xhr.then(function(response) {\r\n                dfd.resolve($field, 'remote', response.valid === true || response.valid === 'true');\r\n            });\r\n\r\n            dfd.fail(function() {\r\n                xhr.abort();\r\n            });\r\n\r\n            return dfd;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.siren = {\r\n        /**\r\n         * Check if a string is a siren number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            if (!/^\\d{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n            return $.fn.bootstrapValidator.helpers.luhn(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.siret = {\r\n        /**\r\n         * Check if a string is a siret number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            var sum    = 0,\r\n                length = value.length,\r\n                tmp;\r\n            for (var i = 0; i < length; i++) {\r\n                tmp = parseInt(value.charAt(i), 10);\r\n                if ((i % 2) == 0) {\r\n                    tmp = tmp * 2;\r\n                    if (tmp > 9) {\r\n                        tmp -= 9;\r\n                    }\r\n                }\r\n                sum += tmp;\r\n            }\r\n            return (sum % 10 == 0);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.step = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            base: 'baseValue',\r\n            step: 'step'\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is valid step one\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Can consist of the following keys:\r\n         * - baseValue: The base value\r\n         * - step: The step\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            options = $.extend({}, { baseValue: 0, step: 1 }, options);\r\n            value   = parseFloat(value);\r\n            if (isNaN(value) || !isFinite(value)) {\r\n                return false;\r\n            }\r\n\r\n            var round = function(x, precision) {\r\n                    var m = Math.pow(10, precision);\r\n                    x = x * m;\r\n                    var sign   = (x > 0) | -(x < 0),\r\n                        isHalf = (x % 1 === 0.5 * sign);\r\n                    if (isHalf) {\r\n                        return (Math.floor(x) + (sign > 0)) / m;\r\n                    } else {\r\n                        return Math.round(x) / m;\r\n                    }\r\n                },\r\n                floatMod = function(x, y) {\r\n                    if (y == 0.0) {\r\n                        return 1.0;\r\n                    }\r\n                    var dotX      = (x + '').split('.'),\r\n                        dotY      = (y + '').split('.'),\r\n                        precision = ((dotX.length == 1) ? 0 : dotX[1].length) + ((dotY.length == 1) ? 0 : dotY[1].length);\r\n                    return round(x - y * Math.floor(x / y), precision);\r\n                };\r\n\r\n            var mod = floatMod(value - options.baseValue, options.step);\r\n            return (mod == 0.0 || mod == options.step);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.stringCase = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            'case': 'case'\r\n        },\r\n\r\n        /**\r\n         * Check if a string is a lower or upper case one\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * - case: Can be 'lower' (default) or 'upper'\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            var stringCase = (options['case'] || 'lower').toLowerCase();\r\n            switch (stringCase) {\r\n                case 'upper':\r\n                    return value === value.toUpperCase();\r\n                case 'lower':\r\n                default:\r\n                    return value === value.toLowerCase();\r\n            }\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.stringLength = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            min: 'min',\r\n            max: 'max'\r\n        },\r\n\r\n        enableByHtml5: function($field) {\r\n            var maxLength = $field.attr('maxlength');\r\n            if (maxLength) {\r\n                return {\r\n                    max: parseInt(maxLength, 10)\r\n                };\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Check if the length of element value is less or more than given number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consists of following keys:\r\n         * - min\r\n         * - max\r\n         * At least one of two keys is required\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            var length = $.trim(value).length;\r\n            if ((options.min && length < options.min) || (options.max && length > options.max)) {\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.uri = {\r\n        enableByHtml5: function($field) {\r\n            return ('url' == $field.attr('type'));\r\n        },\r\n\r\n        /**\r\n         * Return true if the input value is a valid URL\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            // Credit to https://gist.github.com/dperini/729294\r\n            //\r\n            // Regular Expression for URL validation\r\n            //\r\n            // Author: Diego Perini\r\n            // Updated: 2010/12/05\r\n            //\r\n            // the regular expression composed & commented\r\n            // could be easily tweaked for RFC compliance,\r\n            // it was expressly modified to fit & satisfy\r\n            // these test for an URL shortener:\r\n            //\r\n            //   http://mathiasbynens.be/demo/url-regex\r\n            //\r\n            // Notes on possible differences from a standard/generic validation:\r\n            //\r\n            // - utf-8 char class take in consideration the full Unicode range\r\n            // - TLDs have been made mandatory so single names like \"localhost\" fails\r\n            // - protocols have been restricted to ftp, http and https only as requested\r\n            //\r\n            // Changes:\r\n            //\r\n            // - IP address dotted notation validation, range: 1.0.0.0 - 223.255.255.255\r\n            //   first and last IP address of each class is considered invalid\r\n            //   (since they are broadcast/network addresses)\r\n            //\r\n            // - Added exclusion of private, reserved and/or local networks ranges\r\n            //\r\n            // Compressed one-line versions:\r\n            //\r\n            // Javascript version\r\n            //\r\n            // /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/i\r\n            //\r\n            // PHP version\r\n            //\r\n            // _^(?:(?:https?|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\x{00a1}-\\x{ffff}0-9]+-?)*[a-z\\x{00a1}-\\x{ffff}0-9]+)(?:\\.(?:[a-z\\x{00a1}-\\x{ffff}0-9]+-?)*[a-z\\x{00a1}-\\x{ffff}0-9]+)*(?:\\.(?:[a-z\\x{00a1}-\\x{ffff}]{2,})))(?::\\d{2,5})?(?:/[^\\s]*)?$_iuS\r\n            var urlExp = new RegExp(\r\n                \"^\" +\r\n                    // protocol identifier\r\n                \"(?:(?:https?|ftp)://)\" +\r\n                    // user:pass authentication\r\n                \"(?:\\\\S+(?::\\\\S*)?@)?\" +\r\n                \"(?:\" +\r\n                    // IP address exclusion\r\n                    // private & local networks\r\n                \"(?!10(?:\\\\.\\\\d{1,3}){3})\" +\r\n                \"(?!127(?:\\\\.\\\\d{1,3}){3})\" +\r\n                \"(?!169\\\\.254(?:\\\\.\\\\d{1,3}){2})\" +\r\n                \"(?!192\\\\.168(?:\\\\.\\\\d{1,3}){2})\" +\r\n                \"(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})\" +\r\n                    // IP address dotted notation octets\r\n                    // excludes loopback network 0.0.0.0\r\n                    // excludes reserved space >= 224.0.0.0\r\n                    // excludes network & broacast addresses\r\n                    // (first & last IP address of each class)\r\n                \"(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])\" +\r\n                \"(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}\" +\r\n                \"(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))\" +\r\n                \"|\" +\r\n                    // host name\r\n                \"(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)\" +\r\n                    // domain name\r\n                \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*\" +\r\n                    // TLD identifier\r\n                \"(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\" +\r\n                \")\" +\r\n                    // port number\r\n                \"(?::\\\\d{2,5})?\" +\r\n                    // resource path\r\n                \"(?:/[^\\\\s]*)?\" +\r\n                \"$\", \"i\"\r\n            );\r\n            return urlExp.test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.uuid = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            version: 'version'\r\n        },\r\n\r\n        /**\r\n         * Return true if and only if the input value is a valid UUID string\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/Universally_unique_identifier\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * - version: Can be 3, 4, 5, null\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            // See the format at http://en.wikipedia.org/wiki/Universally_unique_identifier#Variants_and_versions\r\n            var patterns = {\r\n                    '3': /^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\r\n                    '4': /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\r\n                    '5': /^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,\r\n                    all: /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i\r\n                },\r\n                version = options.version ? (options.version + '') : 'all';\r\n            return (null == patterns[version]) ? true : patterns[version].test(value);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.vat = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            country: 'country'\r\n        },\r\n\r\n        /**\r\n         * Validate an European VAT number\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * - country: The ISO 3166-1 country code\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            var country = options.country || value.substr(0, 2),\r\n                method  = ['_', country.toLowerCase()].join('');\r\n            if (this[method] && 'function' == typeof this[method]) {\r\n                return this[method](value);\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        // VAT validators\r\n\r\n        /**\r\n         * Validate Austrian VAT number\r\n         * Example:\r\n         * - Valid: ATU13585627\r\n         * - Invalid: ATU13585626\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _at: function(value) {\r\n            if (!/^ATU[0-9]{8}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(3);\r\n            var sum    = 0,\r\n                weight = [1, 2, 1, 2, 1, 2, 1],\r\n                temp   = 0;\r\n\r\n            for (var i = 0; i < 7; i++) {\r\n                temp = parseInt(value.charAt(i)) * weight[i];\r\n                if (temp > 9) {\r\n                    temp = Math.floor(temp / 10) + temp % 10;\r\n                }\r\n                sum += temp;\r\n            }\r\n\r\n            sum = 10 - (sum + 4) % 10;\r\n            if (sum == 10) {\r\n                sum = 0;\r\n            }\r\n\r\n            return (sum == value.substr(7, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Belgian VAT number\r\n         * Example:\r\n         * - Valid: BE0428759497\r\n         * - Invalid: BE431150351\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _be: function(value) {\r\n            if (!/^BE[0]{0,1}[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            if (value.length == 9) {\r\n                value = '0' + value;\r\n            }\r\n\r\n            if (value.substr(1, 1) == 0) {\r\n                return false;\r\n            }\r\n\r\n            var sum = parseInt(value.substr(0, 8), 10) + parseInt(value.substr(8, 2), 10);\r\n            return (sum % 97 == 0);\r\n        },\r\n\r\n        /**\r\n         * Validate Bulgarian VAT number\r\n         * Example:\r\n         * - Valid: BG175074752,\r\n         * BG7523169263, BG8032056031,\r\n         * BG7542011030,\r\n         * BG7111042925\r\n         * - Invalid: BG175074753, BG7552A10004, BG7111042922\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _bg: function(value) {\r\n            if (!/^BG[0-9]{9,10}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n\r\n            var total = 0, sum = 0, weight = [], i = 0;\r\n\r\n            // Legal entities\r\n            if (value.length == 9) {\r\n                for (i = 0; i < 8; i++) {\r\n                    sum += parseInt(value.charAt(i)) * (i + 1);\r\n                }\r\n                sum = sum % 11;\r\n                if (sum == 10) {\r\n                    sum = 0;\r\n                    for (i = 0; i < 8; i++) {\r\n                        sum += parseInt(value.charAt(i)) * (i + 3);\r\n                    }\r\n                }\r\n                sum = sum % 10;\r\n                return (sum == value.substr(8));\r\n            }\r\n            // Physical persons, foreigners and others\r\n            else if (value.length == 10) {\r\n                // Validate Bulgarian national identification numbers\r\n                var egn = function(value) {\r\n                        // Check the birth date\r\n                        var year  = parseInt(value.substr(0, 2), 10) + 1900,\r\n                            month = parseInt(value.substr(2, 2), 10),\r\n                            day   = parseInt(value.substr(4, 2), 10);\r\n                        if (month > 40) {\r\n                            year += 100;\r\n                            month -= 40;\r\n                        } else if (month > 20) {\r\n                            year -= 100;\r\n                            month -= 20;\r\n                        }\r\n\r\n                        try {\r\n                            var d = new Date(year, month, day);\r\n                        } catch (ex) {\r\n                            return false;\r\n                        }\r\n\r\n                        var sum    = 0,\r\n                            weight = [2, 4, 8, 5, 10, 9, 7, 3, 6];\r\n                        for (var i = 0; i < 9; i++) {\r\n                            sum += parseInt(value.charAt(i)) * weight[i];\r\n                        }\r\n                        sum = (sum % 11) % 10;\r\n                        return (sum == value.substr(9, 1));\r\n                    },\r\n                // Validate Bulgarian personal number of a foreigner\r\n                    pnf = function(value) {\r\n                        var sum    = 0,\r\n                            weight = [21, 19, 17, 13, 11, 9, 7, 3, 1];\r\n                        for (var i = 0; i < 9; i++) {\r\n                            sum += parseInt(value.charAt(i)) * weight[i];\r\n                        }\r\n                        sum = sum % 10;\r\n                        return (sum == value.substr(9, 1));\r\n                    },\r\n                // Finally, consider it as a VAT number\r\n                    vat = function(value) {\r\n                        var sum    = 0,\r\n                            weight = [4, 3, 2, 7, 6, 5, 4, 3, 2];\r\n                        for (var i = 0; i < 9; i++) {\r\n                            sum += parseInt(value.charAt(i)) * weight[i];\r\n                        }\r\n                        sum = 11 - sum % 11;\r\n                        if (sum == 10) {\r\n                            return false;\r\n                        }\r\n                        if (sum == 11) {\r\n                            sum = 0;\r\n                        }\r\n                        return (sum == value.substr(9, 1));\r\n                    };\r\n                return (egn(value) || pnf(value) || vat(value));\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Validate Swiss VAT number\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _ch: function(value) {\r\n            if (!/^CHE[0-9]{9}(MWST)?$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(3);\r\n            var sum    = 0,\r\n                weight = [5, 4, 3, 2, 7, 6, 5, 4];\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n\r\n            sum = 11 - sum % 11;\r\n            if (sum == 10) {\r\n                return false;\r\n            }\r\n            if (sum == 11) {\r\n                sum = 0;\r\n            }\r\n\r\n            return (sum == value.substr(8, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Cypriot VAT number\r\n         * Examples:\r\n         * - Valid: CY10259033P\r\n         * - Invalid: CY10259033Z\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _cy: function(value) {\r\n            if (!/^CY[0-5|9]{1}[0-9]{7}[A-Z]{1}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n\r\n            // Do not allow to start with \"12\"\r\n            if (value.substr(0, 2) == '12') {\r\n                return false;\r\n            }\r\n\r\n            // Extract the next digit and multiply by the counter.\r\n            var sum         = 0,\r\n                translation = {\r\n                    '0': 1,  '1': 0,  '2': 5,  '3': 7,  '4': 9,\r\n                    '5': 13, '6': 15, '7': 17, '8': 19, '9': 21\r\n                };\r\n            for (var i = 0; i < 8; i++) {\r\n                var temp = parseInt(value.charAt(i), 10);\r\n                if (i % 2 == 0) {\r\n                    temp = translation[temp + ''];\r\n                }\r\n                sum += temp;\r\n            }\r\n\r\n            sum = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[sum % 26];\r\n            return (sum == value.substr(8, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Czech Republic VAT number\r\n         * Can be:\r\n         * i) Legal entities (8 digit numbers)\r\n         * ii) Individuals with a RC (the 9 or 10 digit Czech birth number)\r\n         * iii) Individuals without a RC (9 digit numbers beginning with 6)\r\n         *\r\n         * Examples:\r\n         * - Valid: i) CZ25123891; ii) CZ7103192745, CZ991231123; iii) CZ640903926\r\n         * - Invalid: i) CZ25123890; ii) CZ1103492745, CZ590312123\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _cz: function(value) {\r\n            if (!/^CZ[0-9]{8,10}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n\r\n            var sum = 0,\r\n                i   = 0;\r\n            if (value.length == 8) {\r\n                // Do not allow to start with '9'\r\n                if (value.charAt(0) + '' == '9') {\r\n                    return false;\r\n                }\r\n\r\n                sum = 0;\r\n                for (i = 0; i < 7; i++) {\r\n                    sum += parseInt(value.charAt(i), 10) * (8 - i);\r\n                }\r\n                sum = 11 - sum % 11;\r\n                if (sum == 10) {\r\n                    sum = 0;\r\n                }\r\n                if (sum == 11) {\r\n                    sum = 1;\r\n                }\r\n\r\n                return (sum == value.substr(7, 1));\r\n            } else if (value.length == 9 && (value.charAt(0) + '' == '6')) {\r\n                sum = 0;\r\n                // Skip the first (which is 6)\r\n                for (i = 0; i < 7; i++) {\r\n                    sum += parseInt(value.charAt(i + 1), 10) * (8 - i);\r\n                }\r\n                sum = 11 - sum % 11;\r\n                if (sum == 10) {\r\n                    sum = 0;\r\n                }\r\n                if (sum == 11) {\r\n                    sum = 1;\r\n                }\r\n                sum = [8, 7, 6, 5, 4, 3, 2, 1, 0, 9, 10][sum - 1];\r\n                return (sum == value.substr(8, 1));\r\n            } else if (value.length == 9 || value.length == 10) {\r\n                // Validate Czech birth number (Rodné číslo), which is also national identifier\r\n                var year  = 1900 + parseInt(value.substr(0, 2)),\r\n                    month = parseInt(value.substr(2, 2)) % 50 % 20,\r\n                    day   = parseInt(value.substr(4, 2));\r\n                if (value.length == 9) {\r\n                    if (year >= 1980) {\r\n                        year -= 100;\r\n                    }\r\n                    if (year > 1953) {\r\n                        return false;\r\n                    }\r\n                } else if (year < 1954) {\r\n                    year += 100;\r\n                }\r\n\r\n                try {\r\n                    var d = new Date(year, month, day);\r\n                } catch (ex) {\r\n                    return false;\r\n                }\r\n\r\n                // Check that the birth date is not in the future\r\n                if (value.length == 10) {\r\n                    var check = parseInt(value.substr(0, 9), 10) % 11;\r\n                    if (year < 1985) {\r\n                        check = check % 10;\r\n                    }\r\n                    return (check == value.substr(9, 1));\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Validate German VAT number\r\n         * Examples:\r\n         * - Valid: DE136695976\r\n         * - Invalid: DE136695978\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _de: function(value) {\r\n            if (!/^DE[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            return $.fn.bootstrapValidator.helpers.mod_11_10(value);\r\n        },\r\n\r\n        /**\r\n         * Validate Danish VAT number\r\n         * Example:\r\n         * - Valid: DK13585628\r\n         * - Invalid: DK13585627\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _dk: function(value) {\r\n            if (!/^DK[0-9]{8}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [2, 7, 6, 5, 4, 3, 2, 1];\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i), 10) * weight[i];\r\n            }\r\n\r\n            return (sum % 11 == 0);\r\n        },\r\n\r\n        /**\r\n         * Validate Estonian VAT number\r\n         * Examples:\r\n         * - Valid: EE100931558, EE100594102\r\n         * - Invalid: EE100594103\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _ee: function(value) {\r\n            if (!/^EE[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [3, 7, 1, 3, 7, 1, 3, 7, 1];\r\n\r\n            for (var i = 0; i < 9; i++) {\r\n                sum += parseInt(value.charAt(i)) * weight[i];\r\n            }\r\n\r\n            return (sum % 10 == 0);\r\n        },\r\n\r\n        /**\r\n         * Validate Spanish VAT number (NIF - Número de Identificación Fiscal)\r\n         * Can be:\r\n         * i) DNI (Documento nacional de identidad), for Spaniards\r\n         * ii) NIE (Número de Identificación de Extranjeros), for foreigners\r\n         * iii) CIF (Certificado de Identificación Fiscal), for legal entities and others\r\n         *\r\n         * Examples:\r\n         * - Valid: i) ES54362315K; ii) ESX2482300W, ESX5253868R; iii) ESM1234567L, ESJ99216582, ESB58378431, ESB64717838\r\n         * - Invalid: i) ES54362315Z; ii) ESX2482300A; iii) ESJ99216583\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _es: function(value) {\r\n            if (!/^ES[0-9A-Z][0-9]{7}[0-9A-Z]$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var dni = function(value) {\r\n                    var check = parseInt(value.substr(0, 8), 10);\r\n                    check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\r\n                    return (check == value.substr(8, 1));\r\n                },\r\n                nie = function(value) {\r\n                    var check = ['XYZ'.indexOf(value.charAt(0)), value.substr(1)].join('');\r\n                    check = parseInt(check, 10);\r\n                    check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\r\n                    return (check == value.substr(8, 1));\r\n                },\r\n                cif = function(value) {\r\n                    var first = value.charAt(0), check;\r\n                    if ('KLM'.indexOf(first) != -1) {\r\n                        // K: Spanish younger than 14 year old\r\n                        // L: Spanish living outside Spain without DNI\r\n                        // M: Granted the tax to foreigners who have no NIE\r\n                        check = parseInt(value.substr(1, 8), 10);\r\n                        check = 'TRWAGMYFPDXBNJZSQVHLCKE'[check % 23];\r\n                        return (check == value.substr(8, 1));\r\n                    } else if ('ABCDEFGHJNPQRSUVW'.indexOf(first) != -1) {\r\n                        var sum    = 0,\r\n                            weight = [2, 1, 2, 1, 2, 1, 2],\r\n                            temp   = 0;\r\n\r\n                        for (var i = 0; i < 7; i++) {\r\n                            temp = parseInt(value.charAt(i + 1)) * weight[i];\r\n                            if (temp > 9) {\r\n                                temp = Math.floor(temp / 10) + temp % 10;\r\n                            }\r\n                            sum += temp;\r\n                        }\r\n                        sum = 10 - sum % 10;\r\n                        return (sum == value.substr(8, 1) || 'JABCDEFGHI'[sum] == value.substr(8, 1));\r\n                    }\r\n\r\n                    return false;\r\n                };\r\n\r\n            var first = value.charAt(0);\r\n            if (/^[0-9]$/.test(first)) {\r\n                return dni(value);\r\n            } else if (/^[XYZ]$/.test(first)) {\r\n                return nie(value);\r\n            } else {\r\n                return cif(value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validate Finnish VAT number\r\n         * Examples:\r\n         * - Valid: FI20774740\r\n         * - Invalid: FI20774741\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _fi: function(value) {\r\n            if (!/^FI[0-9]{8}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [7, 9, 10, 5, 8, 4, 2, 1];\r\n\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i)) * weight[i];\r\n            }\r\n\r\n            return (sum % 11 == 0);\r\n        },\r\n\r\n        /**\r\n         * Validate French VAT number (TVA - taxe sur la valeur ajoutée)\r\n         * It's constructed by a SIREN number, prefixed by two characters.\r\n         *\r\n         * Examples:\r\n         * - Valid: FR40303265045, FR23334175221, FRK7399859412, FR4Z123456782\r\n         * - Invalid: FR84323140391\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _fr: function(value) {\r\n            if (!/^FR[0-9A-Z]{2}[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n\r\n            if (!$.fn.bootstrapValidator.helpers.luhn(value.substr(2))) {\r\n                return false;\r\n            }\r\n\r\n            if (/^[0-9]{2}$/.test(value.substr(0, 2))) {\r\n                // First two characters are digits\r\n                return value.substr(0, 2) == (parseInt(value.substr(2) + '12', 10) % 97);\r\n            } else {\r\n                // The first characters cann't be O and I\r\n                var alphabet = '0123456789ABCDEFGHJKLMNPQRSTUVWXYZ',\r\n                    check;\r\n                // First one is digit\r\n                if (/^[0-9]{1}$/.test(value.charAt(0))) {\r\n                    check = alphabet.indexOf(value.charAt(0)) * 24 + alphabet.indexOf(value.charAt(1)) - 10;\r\n                } else {\r\n                    check = alphabet.indexOf(value.charAt(0)) * 34 + alphabet.indexOf(value.charAt(1)) - 100;\r\n                }\r\n                return ((parseInt(value.substr(2), 10) + 1 + Math.floor(check / 11)) % 11) == (check % 11);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validate United Kingdom VAT number\r\n         * Example:\r\n         * - Valid: GB980780684\r\n         * - Invalid: GB802311781\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _gb: function(value) {\r\n            if (!/^GB[0-9]{9}$/.test(value)             // Standard\r\n                && !/^GB[0-9]{12}$/.test(value)         // Branches\r\n                && !/^GBGD[0-9]{3}$/.test(value)        // Government department\r\n                && !/^GBHA[0-9]{3}$/.test(value)        // Health authority\r\n                && !/^GB(GD|HA)8888[0-9]{5}$/.test(value))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var length = value.length;\r\n            if (length == 5) {\r\n                var firstTwo  = value.substr(0, 2),\r\n                    lastThree = parseInt(value.substr(2));\r\n                return ('GD' == firstTwo && lastThree < 500) || ('HA' == firstTwo && lastThree >= 500);\r\n            } else if (length == 11 && ('GD8888' == value.substr(0, 6) || 'HA8888' == value.substr(0, 6))) {\r\n                if (('GD' == value.substr(0, 2) && parseInt(value.substr(6, 3)) >= 500)\r\n                    || ('HA' == value.substr(0, 2) && parseInt(value.substr(6, 3)) < 500))\r\n                {\r\n                    return false;\r\n                }\r\n                return (parseInt(value.substr(6, 3)) % 97 == parseInt(value.substr(9, 2)));\r\n            } else if (length == 9 || length == 12) {\r\n                var sum    = 0,\r\n                    weight = [8, 7, 6, 5, 4, 3, 2, 10, 1];\r\n                for (var i = 0; i < 9; i++) {\r\n                    sum += parseInt(value.charAt(i)) * weight[i];\r\n                }\r\n                sum = sum % 97;\r\n\r\n                if (parseInt(value.substr(0, 3)) >= 100) {\r\n                    return (sum == 0 || sum == 42 || sum == 55);\r\n                } else {\r\n                    return (sum == 0);\r\n                }\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Validate Greek VAT number\r\n         * Examples:\r\n         * - Valid: GR023456780, EL094259216\r\n         * - Invalid: EL123456781\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _gr: function(value) {\r\n            if (!/^GR[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            if (value.length == 8) {\r\n                value = '0' + value;\r\n            }\r\n\r\n            var sum    = 0,\r\n                weight = [256, 128, 64, 32, 16, 8, 4, 2];\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i)) * weight[i];\r\n            }\r\n            sum = (sum % 11) % 10;\r\n\r\n            return (sum == value.substr(8, 1));\r\n        },\r\n\r\n        // EL is traditionally prefix of Greek VAT numbers\r\n        _el: function(value) {\r\n            if (!/^EL[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = 'GR' + value.substr(2);\r\n            return this._gr(value);\r\n        },\r\n\r\n        /**\r\n         * Validate Hungarian VAT number\r\n         * Examples:\r\n         * - Valid: HU12892312\r\n         * - Invalid: HU12892313\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _hu: function(value) {\r\n            if (!/^HU[0-9]{8}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [9, 7, 3, 1, 9, 7, 3, 1];\r\n\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i)) * weight[i];\r\n            }\r\n\r\n            return (sum % 10 == 0);\r\n        },\r\n\r\n        /**\r\n         * Validate Croatian VAT number\r\n         * Examples:\r\n         * - Valid: HR33392005961\r\n         * - Invalid: HR33392005962\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _hr: function(value) {\r\n            if (!/^HR[0-9]{11}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            return $.fn.bootstrapValidator.helpers.mod_11_10(value);\r\n        },\r\n\r\n        /**\r\n         * Validate Irish VAT number\r\n         * Examples:\r\n         * - Valid: IE6433435F, IE6433435OA, IE8D79739I\r\n         * - Invalid: IE8D79738J\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _ie: function(value) {\r\n            if (!/^IE[0-9]{1}[0-9A-Z\\*\\+]{1}[0-9]{5}[A-Z]{1,2}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var getCheckDigit = function(value) {\r\n                while (value.length < 7) {\r\n                    value = '0' + value;\r\n                }\r\n                var alphabet = 'WABCDEFGHIJKLMNOPQRSTUV',\r\n                    sum      = 0;\r\n                for (var i = 0; i < 7; i++) {\r\n                    sum += parseInt(value.charAt(i)) * (8 - i);\r\n                }\r\n                sum += 9 * alphabet.indexOf(value.substr(7));\r\n                return alphabet[sum % 23];\r\n            };\r\n\r\n            // The first 7 characters are digits\r\n            if (/^[0-9]+$/.test(value.substr(0, 7))) {\r\n                // New system\r\n                return value.charAt(7) == getCheckDigit(value.substr(0, 7) + value.substr(8) + '');\r\n            } else if ('ABCDEFGHIJKLMNOPQRSTUVWXYZ+*'.indexOf(value.charAt(1)) != -1) {\r\n                // Old system\r\n                return value.charAt(7) == getCheckDigit(value.substr(2, 5) + value.substr(0, 1) + '');\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Validate Italian VAT number, which consists of 11 digits.\r\n         * - First 7 digits are a company identifier\r\n         * - Next 3 are the province of residence\r\n         * - The last one is a check digit\r\n         *\r\n         * Examples:\r\n         * - Valid: IT00743110157\r\n         * - Invalid: IT00743110158\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _it: function(value) {\r\n            if (!/^IT[0-9]{11}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            if (parseInt(value.substr(0, 7)) == 0) {\r\n                return false;\r\n            }\r\n\r\n            var lastThree = parseInt(value.substr(7, 3));\r\n            if ((lastThree < 1) || (lastThree > 201) && lastThree != 999 && lastThree != 888) {\r\n                return false;\r\n            }\r\n\r\n            return $.fn.bootstrapValidator.helpers.luhn(value);\r\n        },\r\n\r\n        /**\r\n         * Validate Lithuanian VAT number\r\n         * It can be:\r\n         * - 9 digits, for legal entities\r\n         * - 12 digits, for temporarily registered taxpayers\r\n         *\r\n         * Examples:\r\n         * - Valid: LT119511515, LT100001919017, LT100004801610\r\n         * - Invalid: LT100001919018\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _lt: function(value) {\r\n            if (!/^LT([0-9]{7}1[0-9]{1}|[0-9]{10}1[0-9]{1})$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var length = value.length,\r\n                sum    = 0;\r\n            for (var i = 0; i < length - 1; i++) {\r\n                sum += parseInt(value.charAt(i)) * (1 + i % 9);\r\n            }\r\n            var check = sum % 11;\r\n            if (check == 10) {\r\n                sum = 0;\r\n                for (var i = 0; i < length - 1; i++) {\r\n                    sum += parseInt(value.charAt(i)) * (1 + (i + 2) % 9);\r\n                }\r\n            }\r\n            check = check % 11 % 10;\r\n            return (check == value.charAt(length - 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Luxembourg VAT number\r\n         * Examples:\r\n         * - Valid: LU15027442\r\n         * - Invalid: LU15027443\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _lu: function(value) {\r\n            if (!/^LU[0-9]{8}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            return (value.substr(0, 6) % 89 == value.substr(6, 2));\r\n        },\r\n\r\n        /**\r\n         * Validate Latvian VAT number\r\n         * Examples:\r\n         * - Valid: LV40003521600, LV16117519997\r\n         * - Invalid: LV40003521601, LV16137519997\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _lv: function(value) {\r\n            if (!/^LV[0-9]{11}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var first  = parseInt(value.charAt(0)),\r\n                sum    = 0,\r\n                weight = [],\r\n                i      = 0,\r\n                length = value.length;\r\n            if (first > 3) {\r\n                // Legal entity\r\n                sum    = 0;\r\n                weight = [9, 1, 4, 8, 3, 10, 2, 5, 7, 6, 1];\r\n                for (i = 0; i < length; i++) {\r\n                    sum += parseInt(value.charAt(i)) * weight[i];\r\n                }\r\n                sum = sum % 11;\r\n                return (sum == 3);\r\n            } else {\r\n                // Check birth date\r\n                var day   = parseInt(value.substr(0, 2)),\r\n                    month = parseInt(value.substr(2, 2)),\r\n                    year  = parseInt(value.substr(4, 2));\r\n                year = year + 1800 + parseInt(value.charAt(6)) * 100;\r\n\r\n                try {\r\n                    var d = new Date(year, month, day);\r\n                } catch (ex) {\r\n                    return false;\r\n                }\r\n\r\n                // Check personal code\r\n                sum    = 0;\r\n                weight = [10, 5, 8, 4, 2, 1, 6, 3, 7, 9];\r\n                for (i = 0; i < length - 1; i++) {\r\n                    sum += parseInt(value.charAt(i)) * weight[i];\r\n                }\r\n                sum = (sum + 1) % 11 % 10;\r\n                return (sum == value.charAt(length - 1));\r\n            }\r\n\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Validate Maltese VAT number\r\n         * Examples:\r\n         * - Valid: MT11679112\r\n         * - Invalid: MT11679113\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _mt: function(value) {\r\n            if (!/^MT[0-9]{8}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [3, 4, 6, 7, 8, 9, 10, 1];\r\n\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i)) * weight[i];\r\n            }\r\n\r\n            return (sum % 37 == 0);\r\n        },\r\n\r\n        /**\r\n         * Validate Dutch VAT number\r\n         * Examples:\r\n         * - Valid: NL004495445B01\r\n         * - Invalid: NL123456789B90\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _nl: function(value) {\r\n            if (!/^NL[0-9]{9}B[0-9]{2}$/.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [9, 8, 7, 6, 5, 4, 3, 2];\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i)) * weight[i];\r\n            }\r\n\r\n            sum = sum % 11;\r\n            if (sum > 9) {\r\n                sum = 0;\r\n            }\r\n            return (sum == value.substr(8, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Norwegian VAT number\r\n         *\r\n         * @see http://www.brreg.no/english/coordination/number.html\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _no: function(value) {\r\n            if (!/^NO[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [3, 2, 7, 6, 5, 4, 3, 2];\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i)) * weight[i];\r\n            }\r\n\r\n            sum = 11 - sum % 11;\r\n            if (sum == 11) {\r\n                sum = 0;\r\n            }\r\n            return (sum == value.substr(8, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Polish VAT number\r\n         * Examples:\r\n         * - Valid: PL8567346215\r\n         * - Invalid: PL8567346216\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _pl: function(value) {\r\n            if (!/^PL[0-9]{10}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [6, 5, 7, 2, 3, 4, 5, 6, 7, -1];\r\n\r\n            for (var i = 0; i < 10; i++) {\r\n                sum += parseInt(value.charAt(i)) * weight[i];\r\n            }\r\n\r\n            return (sum % 11 == 0);\r\n        },\r\n\r\n        /**\r\n         * Validate Portuguese VAT number\r\n         * Examples:\r\n         * - Valid: PT501964843\r\n         * - Invalid: PT501964842\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _pt: function(value) {\r\n            if (!/^PT[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [9, 8, 7, 6, 5, 4, 3, 2];\r\n\r\n            for (var i = 0; i < 8; i++) {\r\n                sum += parseInt(value.charAt(i)) * weight[i];\r\n            }\r\n            sum = 11 - sum % 11;\r\n            if (sum > 9) {\r\n                sum = 0;\r\n            }\r\n            return (sum == value.substr(8, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Romanian VAT number\r\n         * Examples:\r\n         * - Valid: RO18547290\r\n         * - Invalid: RO18547291\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _ro: function(value) {\r\n            if (!/^RO[1-9][0-9]{1,9}$/.test(value)) {\r\n                return false;\r\n            }\r\n            value = value.substr(2);\r\n\r\n            var length = value.length,\r\n                weight = [7, 5, 3, 2, 1, 7, 5, 3, 2].slice(10 - length),\r\n                sum    = 0;\r\n            for (var i = 0; i < length - 1; i++) {\r\n                sum += parseInt(value.charAt(i)) * weight[i];\r\n            }\r\n\r\n            sum = (10 * sum) % 11 % 10;\r\n            return (sum == value.substr(length - 1, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Russian VAT number (Taxpayer Identification Number - INN)\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _ru: function(value) {\r\n            if (!/^RU([0-9]{9}|[0-9]{12})$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            if (value.length == 10) {\r\n                var sum    = 0,\r\n                    weight = [2, 4, 10, 3, 5, 9, 4, 6, 8, 0];\r\n                for (var i = 0; i < 10; i++) {\r\n                    sum += parseInt(value.charAt(i)) * weight[i];\r\n                }\r\n                sum = sum % 11;\r\n                if (sum > 9) {\r\n                    sum = sum % 10;\r\n                }\r\n\r\n                return (sum == value.substr(9, 1));\r\n            } else if (value.length == 12) {\r\n                var sum1    = 0,\r\n                    weight1 = [7, 2, 4, 10, 3, 5, 9, 4, 6, 8, 0],\r\n                    sum2    = 0,\r\n                    weight2 = [3, 7, 2, 4, 10, 3, 5, 9, 4, 6, 8, 0];\r\n\r\n                for (var i = 0; i < 11; i++) {\r\n                    sum1 += parseInt(value.charAt(i)) * weight1[i];\r\n                    sum2 += parseInt(value.charAt(i)) * weight2[i];\r\n                }\r\n                sum1 = sum1 % 11;\r\n                if (sum1 > 9) {\r\n                    sum1 = sum1 % 10;\r\n                }\r\n                sum2 = sum2 % 11;\r\n                if (sum2 > 9) {\r\n                    sum2 = sum2 % 10;\r\n                }\r\n\r\n                return (sum1 == value.substr(10, 1) && sum2 == value.substr(11, 1));\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Validate Serbian VAT number\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _rs: function(value) {\r\n            if (!/^RS[0-9]{9}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum  = 10,\r\n                temp = 0;\r\n            for (var i = 0; i < 8; i++) {\r\n                temp = (parseInt(value.charAt(i)) + sum) % 10;\r\n                if (temp == 0) {\r\n                    temp = 10;\r\n                }\r\n                sum = (2 * temp) % 11;\r\n            }\r\n\r\n            return ((sum + parseInt(value.substr(8, 1))) % 10 == 1);\r\n        },\r\n\r\n        /**\r\n         * Validate Swedish VAT number\r\n         * Examples:\r\n         * - Valid: SE123456789701\r\n         * - Invalid: SE123456789101\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _se: function(value) {\r\n            if (!/^SE[0-9]{10}01$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2, 10);\r\n            return $.fn.bootstrapValidator.helpers.luhn(value);\r\n        },\r\n\r\n        /**\r\n         * Validate Slovenian VAT number\r\n         * Examples:\r\n         * - Valid: SI50223054\r\n         * - Invalid: SI50223055\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _si: function(value) {\r\n            if (!/^SI[0-9]{8}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            var sum    = 0,\r\n                weight = [8, 7, 6, 5, 4, 3, 2];\r\n\r\n            for (var i = 0; i < 7; i++) {\r\n                sum += parseInt(value.charAt(i)) * weight[i];\r\n            }\r\n            sum = 11 - sum % 11;\r\n            if (sum == 10) {\r\n                sum = 0;\r\n            }\r\n            return (sum == value.substr(7, 1));\r\n        },\r\n\r\n        /**\r\n         * Validate Slovak VAT number\r\n         * Examples:\r\n         * - Valid: SK2022749619\r\n         * - Invalid: SK2022749618\r\n         *\r\n         * @param {String} value VAT number\r\n         * @returns {Boolean}\r\n         */\r\n        _sk: function(value) {\r\n            if (!/^SK[1-9][0-9][(2-4)|(6-9)][0-9]{7}$/.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.substr(2);\r\n            return (value % 11 == 0);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.vin = {\r\n        /**\r\n         * Validate an US VIN (Vehicle Identification Number)\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '') {\r\n                return true;\r\n            }\r\n\r\n            // Don't accept I, O, Q characters\r\n            if (!/^[a-hj-npr-z0-9]{8}[0-9xX][a-hj-npr-z0-9]{8}$/i.test(value)) {\r\n                return false;\r\n            }\r\n\r\n            value = value.toUpperCase();\r\n            var chars   = {\r\n                    A: 1,   B: 2,   C: 3,   D: 4,   E: 5,   F: 6,   G: 7,   H: 8,\r\n                    J: 1,   K: 2,   L: 3,   M: 4,   N: 5,           P: 7,           R: 9,\r\n                    S: 2,   T: 3,   U: 4,   V: 5,   W: 6,   X: 7,   Y: 8,   Z: 9,\r\n                    '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, '0': 0\r\n                },\r\n                weights = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2],\r\n                sum     = 0,\r\n                length  = value.length;\r\n            for (var i = 0; i < length; i++) {\r\n                sum += chars[value.charAt(i) + ''] * weights[i];\r\n            }\r\n\r\n            var reminder = sum % 11;\r\n            if (reminder == 10) {\r\n                reminder = 'X';\r\n            }\r\n\r\n            return reminder == value.charAt(8);\r\n        }\r\n    };\r\n}(window.jQuery));\r\n;(function($) {\r\n    $.fn.bootstrapValidator.validators.zipCode = {\r\n        html5Attributes: {\r\n            message: 'message',\r\n            country: 'country'\r\n        },\r\n\r\n        /**\r\n         * Return true if and only if the input value is a valid country zip code\r\n         *\r\n         * @param {BootstrapValidator} validator The validator plugin instance\r\n         * @param {jQuery} $field Field element\r\n         * @param {Object} options Consist of key:\r\n         * - message: The invalid message\r\n         * - country: The ISO 3166 country code\r\n         *\r\n         * Currently it supports the following countries:\r\n         * - US (United State)\r\n         * - CA (Canada)\r\n         * - DK (Denmark)\r\n         * - GB (United Kingdom)\r\n         * - SE (Sweden)\r\n         * @returns {Boolean}\r\n         */\r\n        validate: function(validator, $field, options) {\r\n            var value = $field.val();\r\n            if (value == '' || !options.country) {\r\n                return true;\r\n            }\r\n\r\n            var country = (options.country || 'US').toUpperCase();\r\n            switch (country) {\r\n                case 'CA':\r\n                    return /(?:A|B|C|E|G|J|K|L|M|N|P|R|S|T|V|X|Y){1}[0-9]{1}(?:A|B|C|E|G|J|K|L|M|N|P|R|S|T|V|X|Y){1}\\s?[0-9]{1}(?:A|B|C|E|G|J|K|L|M|N|P|R|S|T|V|X|Y){1}[0-9]{1}/i.test(value);\r\n                case 'DK':\r\n                    return /^(DK(-|\\s)?)?\\d{4}$/i.test(value);\r\n                case 'GB':\r\n                    return this._gb(value);\r\n                case 'SE':\r\n                    return /^(S-)?\\d{3}\\s?\\d{2}$/i.test(value);\r\n                case 'US':\r\n                default:\r\n                    return /^\\d{4,5}([\\-]\\d{4})?$/.test(value);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Validate United Kingdom postcode\r\n         * Examples:\r\n         * - Standard: EC1A 1BB, W1A 1HQ, M1 1AA, B33 8TH, CR2 6XH, DN55 1PT\r\n         * - Special cases:\r\n         * AI-2640, ASCN 1ZZ, GIR 0AA\r\n         *\r\n         * @see http://en.wikipedia.org/wiki/Postcodes_in_the_United_Kingdom\r\n         * @param {String} value The postcode\r\n         * @returns {Boolean}\r\n         */\r\n        _gb: function(value) {\r\n            var firstChar  = '[ABCDEFGHIJKLMNOPRSTUWYZ]',     // Does not accept QVX\r\n                secondChar = '[ABCDEFGHKLMNOPQRSTUVWXY]',     // Does not accept IJZ\r\n                thirdChar  = '[ABCDEFGHJKPMNRSTUVWXY]',\r\n                fouthChar  = '[ABEHMNPRVWXY]',\r\n                fifthChar  = '[ABDEFGHJLNPQRSTUWXYZ]',\r\n                regexps = [\r\n                    // AN NAA, ANN NAA, AAN NAA, AANN NAA format\r\n                    new RegExp('^(' + firstChar + '{1}' + secondChar + '?[0-9]{1,2})(\\\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),\r\n                    // ANA NAA\r\n                    new RegExp('^(' + firstChar + '{1}[0-9]{1}' + thirdChar + '{1})(\\\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),\r\n                    // AANA NAA\r\n                    new RegExp('^(' + firstChar + '{1}' + secondChar + '{1}?[0-9]{1}' + fouthChar + '{1})(\\\\s*)([0-9]{1}' + fifthChar + '{2})$', 'i'),\r\n\r\n                    new RegExp('^(BF1)(\\\\s*)([0-6]{1}[ABDEFGHJLNPQRST]{1}[ABDEFGHJLNPQRSTUWZYZ]{1})$', 'i'),        // BFPO postcodes\r\n                    /^(GIR)(\\s*)(0AA)$/i,                       // Special postcode GIR 0AA\r\n                    /^(BFPO)(\\s*)([0-9]{1,4})$/i,               // Standard BFPO numbers\r\n                    /^(BFPO)(\\s*)(c\\/o\\s*[0-9]{1,3})$/i,        // c/o BFPO numbers\r\n                    /^([A-Z]{4})(\\s*)(1ZZ)$/i,                  // Overseas Territories\r\n                    /^(AI-2640)$/i                              // Anguilla\r\n                ];\r\n            for (var i = 0; i < regexps.length; i++) {\r\n                if (regexps[i].test(value)) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n}(window.jQuery));\r\n"]}